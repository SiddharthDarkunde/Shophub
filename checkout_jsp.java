/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.18
 * Generated at: 2025-07-09 05:08:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import javax.servlet.http.*;

public final class checkout_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

    // SESSION & DB SETUP
    String username = (String) session.getAttribute("name");
    if (username == null) {
        username = "John Doe";
        session.setAttribute("username", username);
    }
    
    List<Integer> cart = (List<Integer>) session.getAttribute("cart");
    if (cart == null || cart.isEmpty()) {
        response.sendRedirect("cart.jsp");
        return;
    }
    
    // Handle form submission
    String submitType = request.getParameter("submit_type");
    String message = null;
    boolean orderPlaced = false;
    
    if ("place_order".equals(submitType)) {
        // Get form data
        String fullName = request.getParameter("full_name");
        String email = request.getParameter("email");
        String phone = request.getParameter("phone");
        String address = request.getParameter("address");
        String city = request.getParameter("city");
        String state = request.getParameter("state");
        String pincode = request.getParameter("pincode");
        String paymentMethod = request.getParameter("payment_method");
        String razorpayPaymentId = request.getParameter("razorpay_payment_id");
        String razorpayOrderId = request.getParameter("razorpay_order_id");
        String razorpaySignature = request.getParameter("razorpay_signature");
        
        // Validate required fields
        if (fullName != null && !fullName.trim().isEmpty() &&
            email != null && !email.trim().isEmpty() &&
            phone != null && !phone.trim().isEmpty() &&
            address != null && !address.trim().isEmpty() &&
            city != null && !city.trim().isEmpty() &&
            state != null && !state.trim().isEmpty() &&
            pincode != null && !pincode.trim().isEmpty() &&
            paymentMethod != null) {
            
            try {
                Class.forName("org.postgresql.Driver");
                Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/java", "postgres", "1234");
                
                // Create user-specific table name
                String sanitizedUsername = username.replaceAll("[^a-zA-Z0-9]", "_").toLowerCase();
                String userTableName = "orders_" + sanitizedUsername;
                
                // Calculate total amount and prepare order data
                Map<Integer, Integer> productQuantities = new HashMap<>();
                for (Integer pid : cart) {
                    productQuantities.put(pid, productQuantities.getOrDefault(pid, 0) + 1);
                }
                
                double totalOrderAmount = 0.0;
                String trackingNumber = "TRK" + System.currentTimeMillis();
                
                // Calculate estimated delivery (3-5 days from now)
                Calendar cal = Calendar.getInstance();
                cal.add(Calendar.DAY_OF_MONTH, 4);
                java.sql.Date estimatedDelivery = new java.sql.Date(cal.getTimeInMillis());
                
                // Determine payment status based on method
                String paymentStatus = "cod".equals(paymentMethod) ? "pending" : "paid";
                String orderStatus = "cod".equals(paymentMethod) ? "confirmed" : "processing";
                
                // For Razorpay payments, just check if payment ID exists (simplified validation)
                if ("razorpay".equals(paymentMethod)) {
                    if (razorpayPaymentId != null && !razorpayPaymentId.trim().isEmpty()) {
                        paymentStatus = "paid";
                        orderStatus = "processing";
                    } else {
                        paymentStatus = "pending";
                        orderStatus = "payment_pending";
                    }
                }
                
                // Create orders table if not exists
                Statement initStmt = conn.createStatement();
                String createUserOrdersTable = "CREATE TABLE IF NOT EXISTS " + userTableName + " (" +
                        "id SERIAL PRIMARY KEY," +
                        "username VARCHAR(255) NOT NULL," +
                        "full_name VARCHAR(255)," +
                        "email VARCHAR(255)," +
                        "phone VARCHAR(20)," +
                        "address TEXT," +
                        "city VARCHAR(100)," +
                        "state VARCHAR(100)," +
                        "pincode VARCHAR(10)," +
                        "product_id INT NOT NULL," +
                        "product_name VARCHAR(255) NOT NULL," +
                        "product_image VARCHAR(500)," +
                        "price NUMERIC(10,2) NOT NULL," +
                        "quantity INT DEFAULT 1," +
                        "payment_method VARCHAR(20) NOT NULL," +
                        "payment_status VARCHAR(20) DEFAULT 'pending'," +
                        "razorpay_payment_id VARCHAR(255)," +
                        "razorpay_order_id VARCHAR(255)," +
                        "order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP," +
                        "status VARCHAR(50) DEFAULT 'pending'," +
                        "tracking_number VARCHAR(100)," +
                        "estimated_delivery DATE," +
                        "total_amount NUMERIC(10,2) NOT NULL" +
                        ")";
                initStmt.executeUpdate(createUserOrdersTable);
                initStmt.close();
                
                // Insert order details
                PreparedStatement orderStmt = conn.prepareStatement(
                    "INSERT INTO " + userTableName + " (username, full_name, email, phone, address, city, state, pincode, product_id, product_name, product_image, price, quantity, payment_method, payment_status, razorpay_payment_id, razorpay_order_id, tracking_number, status, estimated_delivery, total_amount) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                
                PreparedStatement prodStmt = conn.prepareStatement(
                    "SELECT name, price, image_url FROM product WHERE id = ?");
                
                for (Map.Entry<Integer, Integer> entry : productQuantities.entrySet()) {
                    int pid = entry.getKey();
                    int quantity = entry.getValue();
                    
                    prodStmt.setInt(1, pid);
                    ResultSet rs = prodStmt.executeQuery();
                    if (rs.next()) {
                        String productName = rs.getString("name");
                        double price = rs.getDouble("price");
                        String imageUrl = rs.getString("image_url");
                        double itemTotal = price * quantity;
                        totalOrderAmount += itemTotal;
                        
                        orderStmt.setString(1, username);
                        orderStmt.setString(2, fullName);
                        orderStmt.setString(3, email);
                        orderStmt.setString(4, phone);
                        orderStmt.setString(5, address);
                        orderStmt.setString(6, city);
                        orderStmt.setString(7, state);
                        orderStmt.setString(8, pincode);
                        orderStmt.setInt(9, pid);
                        orderStmt.setString(10, productName);
                        orderStmt.setString(11, imageUrl);
                        orderStmt.setDouble(12, price);
                        orderStmt.setInt(13, quantity);
                        orderStmt.setString(14, paymentMethod);
                        orderStmt.setString(15, paymentStatus);
                        orderStmt.setString(16, razorpayPaymentId);
                        orderStmt.setString(17, razorpayOrderId);
                        orderStmt.setString(18, trackingNumber);
                        orderStmt.setString(19, orderStatus);
                        orderStmt.setDate(20, estimatedDelivery);
                        orderStmt.setDouble(21, itemTotal);
                        orderStmt.executeUpdate();
                    }
                    rs.close();
                }
                
                prodStmt.close();
                orderStmt.close();
                conn.close();
                
                // Clear cart after successful order
                cart.clear();
                session.setAttribute("cart", cart);
                session.setAttribute("trackingNumber", trackingNumber);
                session.setAttribute("orderAmount", totalOrderAmount);
                session.setAttribute("paymentMethod", paymentMethod);
                
                message = "Order placed successfully! Tracking Number: " + trackingNumber;
                orderPlaced = true;
                
            } catch (Exception e) {
                message = "Error placing order: " + e.getMessage();
                e.printStackTrace(); // For debugging
            }
        } else {
            message = "Please fill in all required fields.";
        }
    }
    
    // Calculate cart totals
    Map<Integer, Integer> productQuantities = new HashMap<>();
    for (Integer pid : cart) {
        productQuantities.put(pid, productQuantities.getOrDefault(pid, 0) + 1);
    }
    
    List<Map<String, Object>> cartProducts = new ArrayList<>();
    double totalAmount = 0.0;
    
    if (!productQuantities.isEmpty()) {
        try {
            Class.forName("org.postgresql.Driver");
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/java", "postgres", "1234");
            
            for (Map.Entry<Integer, Integer> entry : productQuantities.entrySet()) {
                PreparedStatement ps = conn.prepareStatement("SELECT * FROM product WHERE id = ?");
                ps.setInt(1, entry.getKey());
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    Map<String, Object> product = new HashMap<>();
                    product.put("id", rs.getInt("id"));
                    product.put("name", rs.getString("name"));
                    product.put("price", rs.getDouble("price"));
                    product.put("image_url", rs.getString("image_url"));
                    product.put("quantity", entry.getValue());
                    cartProducts.add(product);
                    totalAmount += rs.getDouble("price") * entry.getValue();
                }
                rs.close();
                ps.close();
            }
            conn.close();
        } catch (Exception e) {
            e.printStackTrace(); // For debugging
        }
    }

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Checkout - ShopHub</title>\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap\" rel=\"stylesheet\">\n");
      out.write("    <script src=\"https://checkout.razorpay.com/v1/checkout.js\"></script>\n");
      out.write("    \n");
      out.write("    <style>\n");
      out.write("        * {\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            box-sizing: border-box;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        body {\n");
      out.write("            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n");
      out.write("            background-color: #fafbfc;\n");
      out.write("            color: #2d3748;\n");
      out.write("            line-height: 1.6;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .navbar {\n");
      out.write("            background-color: #ffffff;\n");
      out.write("            padding: 15px 0;\n");
      out.write("            position: fixed;\n");
      out.write("            top: 0;\n");
      out.write("            width: 100%;\n");
      out.write("            z-index: 1000;\n");
      out.write("            border-bottom: 1px solid rgba(45, 55, 72, 0.08);\n");
      out.write("            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .navbar-brand {\n");
      out.write("            color: #2d3748 !important;\n");
      out.write("            font-weight: 800;\n");
      out.write("            font-size: 24px;\n");
      out.write("            text-decoration: none;\n");
      out.write("            letter-spacing: -0.5px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .main-container {\n");
      out.write("            max-width: 1200px;\n");
      out.write("            margin: 0 auto;\n");
      out.write("            padding: 100px 20px 40px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .checkout-container {\n");
      out.write("            display: grid;\n");
      out.write("            grid-template-columns: 1fr 400px;\n");
      out.write("            gap: 40px;\n");
      out.write("            align-items: flex-start;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .checkout-form {\n");
      out.write("            background-color: #ffffff;\n");
      out.write("            border-radius: 12px;\n");
      out.write("            padding: 32px;\n");
      out.write("            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n");
      out.write("            border: 1px solid #e2e8f0;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .order-summary {\n");
      out.write("            background-color: #ffffff;\n");
      out.write("            border-radius: 12px;\n");
      out.write("            padding: 24px;\n");
      out.write("            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n");
      out.write("            border: 1px solid #e2e8f0;\n");
      out.write("            position: sticky;\n");
      out.write("            top: 120px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .section-title {\n");
      out.write("            font-size: 20px;\n");
      out.write("            font-weight: 700;\n");
      out.write("            color: #2d3748;\n");
      out.write("            margin-bottom: 24px;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            gap: 8px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-group {\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-label {\n");
      out.write("            display: block;\n");
      out.write("            font-size: 14px;\n");
      out.write("            font-weight: 600;\n");
      out.write("            color: #4a5568;\n");
      out.write("            margin-bottom: 8px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-control {\n");
      out.write("            width: 100%;\n");
      out.write("            padding: 12px 16px;\n");
      out.write("            border: 1px solid #e2e8f0;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            font-size: 14px;\n");
      out.write("            transition: all 0.2s ease;\n");
      out.write("            background-color: #ffffff;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-control:focus {\n");
      out.write("            outline: none;\n");
      out.write("            border-color: #ff6b35;\n");
      out.write("            box-shadow: 0 0 0 3px rgba(255, 107, 53, 0.1);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-row {\n");
      out.write("            display: grid;\n");
      out.write("            grid-template-columns: 1fr 1fr;\n");
      out.write("            gap: 16px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .payment-methods {\n");
      out.write("            display: grid;\n");
      out.write("            gap: 16px;\n");
      out.write("            margin-bottom: 24px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .payment-option {\n");
      out.write("            border: 2px solid #e2e8f0;\n");
      out.write("            border-radius: 12px;\n");
      out.write("            padding: 20px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            transition: all 0.2s ease;\n");
      out.write("            position: relative;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .payment-option:hover {\n");
      out.write("            border-color: #ff6b35;\n");
      out.write("            background-color: #fef5f0;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .payment-option.selected {\n");
      out.write("            border-color: #ff6b35;\n");
      out.write("            background-color: #fef5f0;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .payment-option input[type=\"radio\"] {\n");
      out.write("            position: absolute;\n");
      out.write("            opacity: 0;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .payment-header {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            gap: 12px;\n");
      out.write("            margin-bottom: 8px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .payment-icon {\n");
      out.write("            width: 40px;\n");
      out.write("            height: 40px;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: center;\n");
      out.write("            font-size: 18px;\n");
      out.write("            color: #ffffff;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .razorpay-icon {\n");
      out.write("            background: linear-gradient(135deg, #3395ff, #1976d2);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .cod-icon {\n");
      out.write("            background: linear-gradient(135deg, #4caf50, #2e7d32);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .payment-title {\n");
      out.write("            font-size: 16px;\n");
      out.write("            font-weight: 600;\n");
      out.write("            color: #2d3748;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .payment-description {\n");
      out.write("            font-size: 14px;\n");
      out.write("            color: #718096;\n");
      out.write("            margin-left: 52px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .order-item {\n");
      out.write("            display: flex;\n");
      out.write("            gap: 16px;\n");
      out.write("            padding: 16px 0;\n");
      out.write("            border-bottom: 1px solid #e2e8f0;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .order-item:last-child {\n");
      out.write("            border-bottom: none;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .item-image {\n");
      out.write("            width: 60px;\n");
      out.write("            height: 60px;\n");
      out.write("            object-fit: contain;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            border: 1px solid #e2e8f0;\n");
      out.write("            background-color: #f7fafc;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .item-details {\n");
      out.write("            flex: 1;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .item-name {\n");
      out.write("            font-size: 14px;\n");
      out.write("            font-weight: 600;\n");
      out.write("            color: #2d3748;\n");
      out.write("            margin-bottom: 4px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .item-price {\n");
      out.write("            font-size: 14px;\n");
      out.write("            color: #718096;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .item-quantity {\n");
      out.write("            font-size: 14px;\n");
      out.write("            font-weight: 600;\n");
      out.write("            color: #2d3748;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .summary-row {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            margin-bottom: 12px;\n");
      out.write("            font-size: 14px;\n");
      out.write("            color: #4a5568;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .summary-total {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            padding-top: 16px;\n");
      out.write("            border-top: 2px solid #e2e8f0;\n");
      out.write("            font-size: 18px;\n");
      out.write("            font-weight: 700;\n");
      out.write("            color: #2d3748;\n");
      out.write("            margin-bottom: 24px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn-primary {\n");
      out.write("            background-color: #ff6b35;\n");
      out.write("            border: none;\n");
      out.write("            color: #ffffff;\n");
      out.write("            font-size: 16px;\n");
      out.write("            font-weight: 600;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            padding: 16px 24px;\n");
      out.write("            width: 100%;\n");
      out.write("            transition: all 0.2s ease;\n");
      out.write("            cursor: pointer;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn-primary:hover {\n");
      out.write("            background-color: #e55a2b;\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("            box-shadow: 0 4px 12px rgba(255, 107, 53, 0.3);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn-primary:disabled {\n");
      out.write("            background-color: #cbd5e0;\n");
      out.write("            cursor: not-allowed;\n");
      out.write("            transform: none;\n");
      out.write("            box-shadow: none;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .alert {\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 12px;\n");
      out.write("            padding: 16px 20px;\n");
      out.write("            margin-bottom: 24px;\n");
      out.write("            font-weight: 500;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .alert-success {\n");
      out.write("            background-color: #f0fff4;\n");
      out.write("            color: #22543d;\n");
      out.write("            border-left: 4px solid #38a169;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .alert-danger {\n");
      out.write("            background-color: #fed7d7;\n");
      out.write("            color: #742a2a;\n");
      out.write("            border-left: 4px solid #e53e3e;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .breadcrumb {\n");
      out.write("            background: none;\n");
      out.write("            padding: 0;\n");
      out.write("            margin-bottom: 24px;\n");
      out.write("            font-size: 14px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .breadcrumb a {\n");
      out.write("            color: #718096;\n");
      out.write("            text-decoration: none;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .breadcrumb a:hover {\n");
      out.write("            color: #ff6b35;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .breadcrumb-item.active {\n");
      out.write("            color: #2d3748;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .success-animation {\n");
      out.write("            position: fixed;\n");
      out.write("            top: 0;\n");
      out.write("            left: 0;\n");
      out.write("            width: 100%;\n");
      out.write("            height: 100%;\n");
      out.write("            background: rgba(0, 0, 0, 0.8);\n");
      out.write("            display: none;\n");
      out.write("            justify-content: center;\n");
      out.write("            align-items: center;\n");
      out.write("            z-index: 9999;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .success-content {\n");
      out.write("            background: white;\n");
      out.write("            padding: 40px;\n");
      out.write("            border-radius: 20px;\n");
      out.write("            text-align: center;\n");
      out.write("            max-width: 500px;\n");
      out.write("            width: 90%;\n");
      out.write("            animation: slideInUp 0.5s ease-out;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .success-icon {\n");
      out.write("            font-size: 80px;\n");
      out.write("            color: #38a169;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("            animation: bounce 1s ease-in-out;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        @keyframes slideInUp {\n");
      out.write("            from {\n");
      out.write("                opacity: 0;\n");
      out.write("                transform: translateY(50px);\n");
      out.write("            }\n");
      out.write("            to {\n");
      out.write("                opacity: 1;\n");
      out.write("                transform: translateY(0);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        @keyframes bounce {\n");
      out.write("            0%, 20%, 60%, 100% {\n");
      out.write("                transform: translateY(0);\n");
      out.write("            }\n");
      out.write("            40% {\n");
      out.write("                transform: translateY(-20px);\n");
      out.write("            }\n");
      out.write("            80% {\n");
      out.write("                transform: translateY(-10px);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        @media (max-width: 768px) {\n");
      out.write("            .checkout-container {\n");
      out.write("                grid-template-columns: 1fr;\n");
      out.write("                gap: 20px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .order-summary {\n");
      out.write("                position: static;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .form-row {\n");
      out.write("                grid-template-columns: 1fr;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <!-- Success Animation Modal -->\n");
      out.write("    <div id=\"successAnimation\" class=\"success-animation\">\n");
      out.write("        <div class=\"success-content\">\n");
      out.write("            <div class=\"success-icon\">\n");
      out.write("                <i class=\"fas fa-check-circle\"></i>\n");
      out.write("            </div>\n");
      out.write("            <h2 style=\"font-size: 28px; font-weight: 700; color: #2d3748; margin-bottom: 16px;\">Order Placed Successfully!</h2>\n");
      out.write("            <p style=\"font-size: 16px; color: #718096; margin-bottom: 24px;\">\n");
      out.write("                Your order has been confirmed and will be processed shortly.\n");
      out.write("            </p>\n");
      out.write("            <div style=\"background: #f7fafc; padding: 16px; border-radius: 8px; margin-bottom: 24px;\">\n");
      out.write("                <div style=\"font-size: 14px; color: #718096; margin-bottom: 8px;\">Tracking Number:</div>\n");
      out.write("                <div style=\"font-family: 'Courier New', monospace; font-weight: 600; color: #2d3748; font-size: 18px;\" id=\"successTrackingNumber\"></div>\n");
      out.write("            </div>\n");
      out.write("            <button class=\"btn-primary\" onclick=\"closeSuccessAnimation()\">\n");
      out.write("                <i class=\"fas fa-truck me-2\"></i>Track Your Order\n");
      out.write("            </button>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Header -->\n");
      out.write("    <nav class=\"navbar\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"d-flex align-items-center justify-content-between w-100\">\n");
      out.write("                <a class=\"navbar-brand\" href=\"dashboard.jsp\">ShopHub</a>\n");
      out.write("                <div style=\"display: flex; align-items: center; gap: 20px;\">\n");
      out.write("                    <a href=\"cart.jsp\" style=\"color: #4a5568; text-decoration: none; font-size: 14px; font-weight: 500;\">\n");
      out.write("                        <i class=\"fas fa-arrow-left me-2\"></i>Back to Cart\n");
      out.write("                    </a>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </nav>\n");
      out.write("\n");
      out.write("    <div class=\"main-container\">\n");
      out.write("        <!-- Breadcrumb -->\n");
      out.write("        <nav aria-label=\"breadcrumb\">\n");
      out.write("            <ol class=\"breadcrumb\">\n");
      out.write("                <li class=\"breadcrumb-item\"><a href=\"dashboard.jsp\">Home</a></li>\n");
      out.write("                <li class=\"breadcrumb-item\"><a href=\"cart.jsp\">Cart</a></li>\n");
      out.write("                <li class=\"breadcrumb-item active\" aria-current=\"page\">Checkout</li>\n");
      out.write("            </ol>\n");
      out.write("        </nav>\n");
      out.write("\n");
      out.write("        <!-- Alert Messages -->\n");
      out.write("        ");
 if (message != null) { 
      out.write("\n");
      out.write("            <div class=\"alert ");
      out.print( message.contains("successfully") ? "alert-success" : "alert-danger" );
      out.write("\">\n");
      out.write("                <i class=\"fas ");
      out.print( message.contains("successfully") ? "fa-check-circle" : "fa-exclamation-circle" );
      out.write(" me-2\"></i>\n");
      out.write("                ");
      out.print( message );
      out.write("\n");
      out.write("            </div>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("        <div class=\"checkout-container\">\n");
      out.write("            <!-- Checkout Form -->\n");
      out.write("            <div class=\"checkout-form\">\n");
      out.write("                <h1 class=\"section-title\">\n");
      out.write("                    <i class=\"fas fa-credit-card\"></i>\n");
      out.write("                    Checkout\n");
      out.write("                </h1>\n");
      out.write("\n");
      out.write("                <form id=\"checkoutForm\" method=\"post\" action=\"checkout.jsp\">\n");
      out.write("                    <input type=\"hidden\" name=\"submit_type\" value=\"place_order\">\n");
      out.write("                    <input type=\"hidden\" name=\"razorpay_payment_id\" id=\"razorpay_payment_id\">\n");
      out.write("                    <input type=\"hidden\" name=\"razorpay_order_id\" id=\"razorpay_order_id\">\n");
      out.write("                    <input type=\"hidden\" name=\"razorpay_signature\" id=\"razorpay_signature\">\n");
      out.write("\n");
      out.write("                    <!-- Shipping Information -->\n");
      out.write("                    <div style=\"margin-bottom: 32px;\">\n");
      out.write("                        <h3 style=\"font-size: 18px; font-weight: 600; color: #2d3748; margin-bottom: 20px; display: flex; align-items: center; gap: 8px;\">\n");
      out.write("                            <i class=\"fas fa-shipping-fast\"></i>\n");
      out.write("                            Shipping Information\n");
      out.write("                        </h3>\n");
      out.write("\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label class=\"form-label\" for=\"full_name\">Full Name *</label>\n");
      out.write("                            <input type=\"text\" id=\"full_name\" name=\"full_name\" class=\"form-control\" required>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"form-row\">\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label class=\"form-label\" for=\"email\">Email Address *</label>\n");
      out.write("                                <input type=\"email\" id=\"email\" name=\"email\" class=\"form-control\" required>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label class=\"form-label\" for=\"phone\">Phone Number *</label>\n");
      out.write("                                <input type=\"tel\" id=\"phone\" name=\"phone\" class=\"form-control\" required>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label class=\"form-label\" for=\"address\">Address *</label>\n");
      out.write("                            <textarea id=\"address\" name=\"address\" class=\"form-control\" rows=\"3\" required></textarea>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"form-row\">\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label class=\"form-label\" for=\"city\">City *</label>\n");
      out.write("                                <input type=\"text\" id=\"city\" name=\"city\" class=\"form-control\" required>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label class=\"form-label\" for=\"state\">State *</label>\n");
      out.write("                                <input type=\"text\" id=\"state\" name=\"state\" class=\"form-control\" required>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label class=\"form-label\" for=\"pincode\">PIN Code *</label>\n");
      out.write("                            <input type=\"text\" id=\"pincode\" name=\"pincode\" class=\"form-control\" pattern=\"[0-9]{6}\" required>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <!-- Payment Method -->\n");
      out.write("                    <div style=\"margin-bottom: 32px;\">\n");
      out.write("                        <h3 style=\"font-size: 18px; font-weight: 600; color: #2d3748; margin-bottom: 20px; display: flex; align-items: center; gap: 8px;\">\n");
      out.write("                            <i class=\"fas fa-credit-card\"></i>\n");
      out.write("                            Payment Method\n");
      out.write("                        </h3>\n");
      out.write("\n");
      out.write("                        <div class=\"payment-methods\">\n");
      out.write("                            <!-- Razorpay Option -->\n");
      out.write("                            <label class=\"payment-option\" for=\"razorpay\">\n");
      out.write("                                <input type=\"radio\" id=\"razorpay\" name=\"payment_method\" value=\"razorpay\" checked>\n");
      out.write("                                <div class=\"payment-header\">\n");
      out.write("                                    <div class=\"payment-icon razorpay-icon\">\n");
      out.write("                                        <i class=\"fas fa-credit-card\"></i>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"payment-title\">Online Payment</div>\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"payment-description\">\n");
      out.write("                                    Pay securely using Credit Card, Debit Card, Net Banking, UPI, or Wallets via Razorpay\n");
      out.write("                                </div>\n");
      out.write("                            </label>\n");
      out.write("\n");
      out.write("                            <!-- COD Option -->\n");
      out.write("                            <label class=\"payment-option\" for=\"cod\">\n");
      out.write("                                <input type=\"radio\" id=\"cod\" name=\"payment_method\" value=\"cod\">\n");
      out.write("                                <div class=\"payment-header\">\n");
      out.write("                                    <div class=\"payment-icon cod-icon\">\n");
      out.write("                                        <i class=\"fas fa-money-bill-wave\"></i>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"payment-title\">Cash on Delivery</div>\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"payment-description\">\n");
      out.write("                                    Pay with cash when your order is delivered to your doorstep\n");
      out.write("                                </div>\n");
      out.write("                            </label>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <!-- Place Order Button -->\n");
      out.write("                    <button type=\"submit\" class=\"btn-primary\" id=\"placeOrderBtn\">\n");
      out.write("                        <i class=\"fas fa-lock me-2\"></i>\n");
      out.write("                        Place Order\n");
      out.write("                    </button>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Order Summary -->\n");
      out.write("            <div class=\"order-summary\">\n");
      out.write("                <h3 class=\"section-title\">\n");
      out.write("                    <i class=\"fas fa-receipt\"></i>\n");
      out.write("                    Order Summary\n");
      out.write("                </h3>\n");
      out.write("\n");
      out.write("                <!-- Order Items -->\n");
      out.write("                <div style=\"margin-bottom: 24px;\">\n");
      out.write("                    ");
 for (Map<String, Object> product : cartProducts) { 
      out.write("\n");
      out.write("                        <div class=\"order-item\">\n");
      out.write("                            <img src=\"");
      out.print( product.get("image_url") );
      out.write("\"\n");
      out.write("                                 alt=\"");
      out.print( product.get("name") );
      out.write("\"\n");
      out.write("                                 class=\"item-image\"\n");
      out.write("                                 onerror=\"this.src='https://via.placeholder.com/60x60/f7fafc/718096?text=Product'\">\n");
      out.write("                            <div class=\"item-details\">\n");
      out.write("                                <div class=\"item-name\">");
      out.print( product.get("name") );
      out.write("</div>\n");
      out.write("                                <div class=\"item-price\">₹");
      out.print( String.format("%.0f", (Double)product.get("price")) );
      out.write(" each</div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"item-quantity\">×");
      out.print( product.get("quantity") );
      out.write("</div>\n");
      out.write("                        </div>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Summary Calculations -->\n");
      out.write("                <div class=\"summary-row\">\n");
      out.write("                    <span>Subtotal (");
      out.print( cart.size() );
      out.write(" items):</span>\n");
      out.write("                    <span>₹");
      out.print( String.format("%.2f", totalAmount) );
      out.write("</span>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"summary-row\">\n");
      out.write("                    <span>Shipping:</span>\n");
      out.write("                    <span>Free</span>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"summary-row\">\n");
      out.write("                    <span>Tax:</span>\n");
      out.write("                    <span>₹0.00</span>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div class=\"summary-total\">\n");
      out.write("                    <span>Total:</span>\n");
      out.write("                    <span>₹");
      out.print( String.format("%.2f", totalAmount) );
      out.write("</span>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Security Info -->\n");
      out.write("                <div style=\"background: #f7fafc; padding: 16px; border-radius: 8px; font-size: 12px; color: #718096; text-align: center;\">\n");
      out.write("                    <i class=\"fas fa-shield-alt me-1\"></i>\n");
      out.write("                    Your payment information is secure and encrypted\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("    <script>\n");
      out.write("        // Payment method selection\n");
      out.write("        document.querySelectorAll('input[name=\"payment_method\"]').forEach(radio => {\n");
      out.write("            radio.addEventListener('change', function() {\n");
      out.write("                document.querySelectorAll('.payment-option').forEach(option => {\n");
      out.write("                    option.classList.remove('selected');\n");
      out.write("                });\n");
      out.write("                this.closest('.payment-option').classList.add('selected');\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        // Initialize selected payment method\n");
      out.write("        document.querySelector('input[name=\"payment_method\"]:checked').closest('.payment-option').classList.add('selected');\n");
      out.write("\n");
      out.write("        // Form submission with FIXED Razorpay integration\n");
      out.write("        document.getElementById('checkoutForm').addEventListener('submit', function(e) {\n");
      out.write("            e.preventDefault();\n");
      out.write("            \n");
      out.write("            const paymentMethod = document.querySelector('input[name=\"payment_method\"]:checked').value;\n");
      out.write("            const placeOrderBtn = document.getElementById('placeOrderBtn');\n");
      out.write("            \n");
      out.write("            // Validate form\n");
      out.write("            const requiredFields = ['full_name', 'email', 'phone', 'address', 'city', 'state', 'pincode'];\n");
      out.write("            let isValid = true;\n");
      out.write("            \n");
      out.write("            requiredFields.forEach(field => {\n");
      out.write("                const input = document.getElementById(field);\n");
      out.write("                if (!input.value.trim()) {\n");
      out.write("                    input.style.borderColor = '#e53e3e';\n");
      out.write("                    isValid = false;\n");
      out.write("                } else {\n");
      out.write("                    input.style.borderColor = '#e2e8f0';\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            if (!isValid) {\n");
      out.write("                alert('Please fill in all required fields.');\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            if (paymentMethod === 'razorpay') {\n");
      out.write("                // FIXED Razorpay payment integration\n");
      out.write("                placeOrderBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin me-2\"></i>Opening Payment Gateway...';\n");
      out.write("                placeOrderBtn.disabled = true;\n");
      out.write("                \n");
      out.write("                const totalAmountInPaise = Math.round(");
      out.print( totalAmount );
      out.write(" * 100);\n");
      out.write("                \n");
      out.write("                const options = {\n");
      out.write("                    \"key\": \"rzp_test_bn5etEyinnafRR\", // Your correct API key\n");
      out.write("                    \"amount\": totalAmountInPaise, // Amount in paise (multiply by 100)\n");
      out.write("                    \"currency\": \"INR\",\n");
      out.write("                    \"name\": \"ShopHub\",\n");
      out.write("                    \"description\": \"Order Payment\",\n");
      out.write("                    \"image\": \"https://cdn-icons-png.flaticon.com/512/3081/3081559.png\", // Generic shopping icon\n");
      out.write("                    \"handler\": function (response) {\n");
      out.write("                        // Payment successful - this is the key fix!\n");
      out.write("                        console.log('Payment Success Response:', response);\n");
      out.write("                        \n");
      out.write("                        // Set the payment details in hidden fields\n");
      out.write("                        document.getElementById('razorpay_payment_id').value = response.razorpay_payment_id;\n");
      out.write("                        document.getElementById('razorpay_order_id').value = response.razorpay_order_id || 'order_' + Date.now();\n");
      out.write("                        document.getElementById('razorpay_signature').value = response.razorpay_signature || 'sig_' + Date.now();\n");
      out.write("                        \n");
      out.write("                        // Update button to show success\n");
      out.write("                        placeOrderBtn.innerHTML = '<i class=\"fas fa-check me-2\"></i>Payment Successful - Processing Order...';\n");
      out.write("                        \n");
      out.write("                        // Submit the form after successful payment\n");
      out.write("                        setTimeout(() => {\n");
      out.write("                            document.getElementById('checkoutForm').submit();\n");
      out.write("                        }, 1000);\n");
      out.write("                    },\n");
      out.write("                    \"prefill\": {\n");
      out.write("                        \"name\": document.getElementById('full_name').value,\n");
      out.write("                        \"email\": document.getElementById('email').value,\n");
      out.write("                        \"contact\": document.getElementById('phone').value\n");
      out.write("                    },\n");
      out.write("                    \"notes\": {\n");
      out.write("                        \"address\": document.getElementById('address').value + ', ' + \n");
      out.write("                                  document.getElementById('city').value + ', ' + \n");
      out.write("                                  document.getElementById('state').value + ' - ' + \n");
      out.write("                                  document.getElementById('pincode').value\n");
      out.write("                    },\n");
      out.write("                    \"theme\": {\n");
      out.write("                        \"color\": \"#ff6b35\"\n");
      out.write("                    },\n");
      out.write("                    \"modal\": {\n");
      out.write("                        \"ondismiss\": function() {\n");
      out.write("                            // Reset button when payment modal is closed\n");
      out.write("                            placeOrderBtn.innerHTML = '<i class=\"fas fa-lock me-2\"></i>Place Order';\n");
      out.write("                            placeOrderBtn.disabled = false;\n");
      out.write("                            console.log('Payment modal dismissed by user');\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                };\n");
      out.write("                \n");
      out.write("                try {\n");
      out.write("                    const rzp = new Razorpay(options);\n");
      out.write("                    \n");
      out.write("                    // Handle payment failure\n");
      out.write("                    rzp.on('payment.failed', function (response) {\n");
      out.write("                        console.error('Payment Failed:', response.error);\n");
      out.write("                        alert('Payment failed: ' + response.error.description + '\\nPlease try again or use a different payment method.');\n");
      out.write("                        placeOrderBtn.innerHTML = '<i class=\"fas fa-lock me-2\"></i>Place Order';\n");
      out.write("                        placeOrderBtn.disabled = false;\n");
      out.write("                    });\n");
      out.write("                    \n");
      out.write("                    // Open Razorpay checkout\n");
      out.write("                    rzp.open();\n");
      out.write("                    \n");
      out.write("                } catch (error) {\n");
      out.write("                    console.error('Razorpay Error:', error);\n");
      out.write("                    alert('Unable to load payment gateway. Please refresh the page and try again.');\n");
      out.write("                    placeOrderBtn.innerHTML = '<i class=\"fas fa-lock me-2\"></i>Place Order';\n");
      out.write("                    placeOrderBtn.disabled = false;\n");
      out.write("                }\n");
      out.write("            } else {\n");
      out.write("                // COD payment - direct form submission\n");
      out.write("                placeOrderBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin me-2\"></i>Placing Order...';\n");
      out.write("                placeOrderBtn.disabled = true;\n");
      out.write("                \n");
      out.write("                // Clear payment fields for COD\n");
      out.write("                document.getElementById('razorpay_payment_id').value = '';\n");
      out.write("                document.getElementById('razorpay_order_id').value = '';\n");
      out.write("                document.getElementById('razorpay_signature').value = '';\n");
      out.write("                \n");
      out.write("                this.submit();\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        // Show success animation if order was placed\n");
      out.write("        ");
 if (orderPlaced) { 
      out.write("\n");
      out.write("            document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("                setTimeout(() => {\n");
      out.write("                    showSuccessAnimation('");
      out.print( session.getAttribute("trackingNumber") );
      out.write("');\n");
      out.write("                }, 500);\n");
      out.write("            });\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("        function showSuccessAnimation(trackingNumber) {\n");
      out.write("            document.getElementById('successTrackingNumber').textContent = trackingNumber;\n");
      out.write("            document.getElementById('successAnimation').style.display = 'flex';\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function closeSuccessAnimation() {\n");
      out.write("            document.getElementById('successAnimation').style.display = 'none';\n");
      out.write("            window.location.href = 'cart.jsp?view=orders';\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Auto-hide success animation after 8 seconds\n");
      out.write("        setTimeout(function() {\n");
      out.write("            const successAnimation = document.getElementById('successAnimation');\n");
      out.write("            if (successAnimation && successAnimation.style.display === 'flex') {\n");
      out.write("                closeSuccessAnimation();\n");
      out.write("            }\n");
      out.write("        }, 8000);\n");
      out.write("\n");
      out.write("        // Debug logging\n");
      out.write("        console.log('Checkout page loaded');\n");
      out.write("        console.log('Total amount: ₹");
      out.print( totalAmount );
      out.write("');\n");
      out.write("        console.log('Amount in paise: ' + Math.round(");
      out.print( totalAmount );
      out.write(" * 100));\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
