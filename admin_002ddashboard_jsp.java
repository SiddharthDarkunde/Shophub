/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.18
 * Generated at: 2025-06-05 03:58:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import javax.servlet.http.*;
import java.io.*;

public final class admin_002ddashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

    // Check admin authentication
    Boolean isAdmin = (Boolean) session.getAttribute("is_admin");
    if (isAdmin == null || !isAdmin) {
        response.sendRedirect("login.jsp");
        return;
    }

    String adminUsername = (String) session.getAttribute("admin_username");
    String adminName = (String) session.getAttribute("admin_name");
    if (adminName == null) adminName = adminUsername;

    // Handle logout
    String logout = request.getParameter("logout");
    if ("true".equals(logout)) {
        session.removeAttribute("admin_id");
        session.removeAttribute("admin_username");
        session.removeAttribute("admin_name");
        session.removeAttribute("admin_email");
        session.removeAttribute("admin_role");
        session.removeAttribute("is_admin");
        response.sendRedirect("login.jsp");
        return;
    }

    // DB CONNECTION
    Class.forName("org.postgresql.Driver");
    Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/java", "postgres", "1234");

    Statement initStmt = conn.createStatement();

    // ENHANCED TABLE CREATION
    initStmt.executeUpdate("CREATE TABLE IF NOT EXISTS category (id SERIAL PRIMARY KEY, name VARCHAR(100) NOT NULL UNIQUE, description TEXT, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)");
    
    initStmt.executeUpdate("CREATE TABLE IF NOT EXISTS product (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL, image_url TEXT, category_id INT REFERENCES category(id), stock INT DEFAULT 0, description TEXT, sku VARCHAR(100) UNIQUE, status VARCHAR(20) DEFAULT 'active', created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)");
    
    // Product variants table
    initStmt.executeUpdate("CREATE TABLE IF NOT EXISTS product_variants (id SERIAL PRIMARY KEY, product_id INT REFERENCES product(id) ON DELETE CASCADE, variant_type VARCHAR(50) NOT NULL, variant_value VARCHAR(100) NOT NULL, price_modifier DECIMAL(10,2) DEFAULT 0, stock INT DEFAULT 0, sku VARCHAR(100), created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)");
    
    initStmt.executeUpdate("CREATE TABLE IF NOT EXISTS register (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, email VARCHAR(255), password VARCHAR(255), created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)");

    // INSERT SAMPLE DATA
    ResultSet checkCat = initStmt.executeQuery("SELECT COUNT(*) FROM category");
    if (checkCat.next() && checkCat.getInt(1) == 0) {
        initStmt.executeUpdate("INSERT INTO category (name, description) VALUES " +
                "('Electronics', 'Electronic devices and gadgets'), " +
                "('Books', 'Books and educational materials'), " +
                "('Clothing', 'Apparel and fashion items'), " +
                "('Home & Garden', 'Home improvement and garden supplies'), " +
                "('Sports', 'Sports equipment and accessories')");
    }
    checkCat.close();

    ResultSet checkProd = initStmt.executeQuery("SELECT COUNT(*) FROM product");
    if (checkProd.next() && checkProd.getInt(1) == 0) {
        initStmt.executeUpdate("INSERT INTO product (name, price, image_url, category_id, stock, description, sku) VALUES " +
                "('Smartphone', 15000, 'https://via.placeholder.com/150', 1, 50, 'Latest smartphone with advanced features', 'SP001')," +
                "('Laptop', 45000, 'https://via.placeholder.com/150', 1, 25, 'High-performance laptop for professionals', 'LP001')," +
                "('Java Programming Book', 500, 'https://via.placeholder.com/150', 2, 100, 'Complete guide to Java programming', 'BK001')," +
                "('T-Shirt', 350, 'https://via.placeholder.com/150', 3, 200, 'Comfortable cotton t-shirt', 'TS001')," +
                "('Jeans', 1200, 'https://via.placeholder.com/150', 3, 150, 'Premium quality denim jeans', 'JN001')");
    }
    checkProd.close();
    initStmt.close();

    String message = "";
    String messageType = "";

    // Handle form processing (simplified without file upload for now)
    String action = request.getParameter("action");

    if (action != null) {
        // BULK OPERATIONS
        if ("bulk_delete".equals(action)) {
            String[] productIds = request.getParameterValues("selected_products");
            if (productIds != null && productIds.length > 0) {
                try {
                    PreparedStatement ps = conn.prepareStatement("DELETE FROM product WHERE id = ?");
                    for (String id : productIds) {
                        ps.setInt(1, Integer.parseInt(id));
                        ps.executeUpdate();
                    }
                    ps.close();
                    message = productIds.length + " products deleted successfully!";
                    messageType = "success";
                } catch (Exception e) {
                    message = "Error deleting products: " + e.getMessage();
                    messageType = "error";
                }
            }
        }
        
        else if ("bulk_update_status".equals(action)) {
            String[] productIds = request.getParameterValues("selected_products");
            String newStatus = request.getParameter("bulk_status");
            if (productIds != null && productIds.length > 0) {
                try {
                    PreparedStatement ps = conn.prepareStatement("UPDATE product SET status = ? WHERE id = ?");
                    for (String id : productIds) {
                        ps.setString(1, newStatus);
                        ps.setInt(2, Integer.parseInt(id));
                        ps.executeUpdate();
                    }
                    ps.close();
                    message = productIds.length + " products updated successfully!";
                    messageType = "success";
                } catch (Exception e) {
                    message = "Error updating products: " + e.getMessage();
                    messageType = "error";
                }
            }
        }
        
        // CSV EXPORT
        else if ("export_csv".equals(action)) {
            response.setContentType("text/csv");
            response.setHeader("Content-Disposition", "attachment; filename=\"products.csv\"");
            
            PrintWriter csvWriter = response.getWriter();
            csvWriter.println("ID,Name,SKU,Price,Category,Stock,Status,Description");
            
            PreparedStatement ps = conn.prepareStatement(
                "SELECT p.*, c.name as category_name FROM product p JOIN category c ON p.category_id = c.id ORDER BY p.id");
            ResultSet rs = ps.executeQuery();
            
            while (rs.next()) {
                csvWriter.printf("%d,\"%s\",\"%s\",%.2f,\"%s\",%d,\"%s\",\"%s\"%n",
                    rs.getInt("id"),
                    rs.getString("name").replace("\"", "\"\""),
                    rs.getString("sku"),
                    rs.getDouble("price"),
                    rs.getString("category_name"),
                    rs.getInt("stock"),
                    rs.getString("status"),
                    rs.getString("description") != null ? rs.getString("description").replace("\"", "\"\"") : ""
                );
            }
            
            rs.close();
            ps.close();
            csvWriter.close();
            return;
        }
        
        // CATEGORY MANAGEMENT
        else if ("add_category".equals(action)) {
            String name = request.getParameter("category_name");
            String description = request.getParameter("category_description");
            
            try {
                PreparedStatement ps = conn.prepareStatement(
                    "INSERT INTO category (name, description) VALUES (?, ?)");
                ps.setString(1, name);
                ps.setString(2, description);
                ps.executeUpdate();
                ps.close();
                message = "Category added successfully!";
                messageType = "success";
            } catch (Exception e) {
                message = "Error adding category: " + e.getMessage();
                messageType = "error";
            }
        }
        
        else if ("edit_category".equals(action)) {
            String categoryId = request.getParameter("category_id");
            String name = request.getParameter("category_name");
            String description = request.getParameter("category_description");
            
            try {
                PreparedStatement ps = conn.prepareStatement(
                    "UPDATE category SET name = ?, description = ? WHERE id = ?");
                ps.setString(1, name);
                ps.setString(2, description);
                ps.setInt(3, Integer.parseInt(categoryId));
                ps.executeUpdate();
                ps.close();
                message = "Category updated successfully!";
                messageType = "success";
            } catch (Exception e) {
                message = "Error updating category: " + e.getMessage();
                messageType = "error";
            }
        }
        
        else if ("delete_category".equals(action)) {
            String categoryId = request.getParameter("category_id");
            try {
                PreparedStatement ps = conn.prepareStatement("DELETE FROM category WHERE id = ?");
                ps.setInt(1, Integer.parseInt(categoryId));
                ps.executeUpdate();
                ps.close();
                message = "Category deleted successfully!";
                messageType = "success";
            } catch (Exception e) {
                message = "Error deleting category: " + e.getMessage();
                messageType = "error";
            }
        }
        
        // PRODUCT OPERATIONS (simplified without file upload)
        else if ("add_product".equals(action)) {
            String name = request.getParameter("product_name");
            String price = request.getParameter("product_price");
            String imageUrl = request.getParameter("product_image");
            String categoryId = request.getParameter("product_category");
            String stock = request.getParameter("product_stock");
            String description = request.getParameter("product_description");
            String sku = request.getParameter("product_sku");
            
            try {
                PreparedStatement ps = conn.prepareStatement(
                    "INSERT INTO product (name, price, image_url, category_id, stock, description, sku) VALUES (?, ?, ?, ?, ?, ?, ?)",
                    Statement.RETURN_GENERATED_KEYS);
                ps.setString(1, name);
                ps.setDouble(2, Double.parseDouble(price));
                ps.setString(3, imageUrl != null && !imageUrl.trim().isEmpty() ? imageUrl : "https://via.placeholder.com/150");
                ps.setInt(4, Integer.parseInt(categoryId));
                ps.setInt(5, Integer.parseInt(stock));
                ps.setString(6, description);
                ps.setString(7, sku);
                ps.executeUpdate();
                
                ResultSet generatedKeys = ps.getGeneratedKeys();
                if (generatedKeys.next()) {
                    int productId = generatedKeys.getInt(1);
                    
                    // Add variants if provided
                    String[] variantTypes = request.getParameterValues("variant_type");
                    String[] variantValues = request.getParameterValues("variant_value");
                    String[] variantPrices = request.getParameterValues("variant_price");
                    String[] variantStocks = request.getParameterValues("variant_stock");
                    
                    if (variantTypes != null) {
                        PreparedStatement variantPs = conn.prepareStatement(
                            "INSERT INTO product_variants (product_id, variant_type, variant_value, price_modifier, stock) VALUES (?, ?, ?, ?, ?)");
                        
                        for (int i = 0; i < variantTypes.length; i++) {
                            if (variantTypes[i] != null && !variantTypes[i].trim().isEmpty()) {
                                variantPs.setInt(1, productId);
                                variantPs.setString(2, variantTypes[i]);
                                variantPs.setString(3, variantValues[i]);
                                variantPs.setDouble(4, variantPrices[i] != null && !variantPrices[i].trim().isEmpty() ? Double.parseDouble(variantPrices[i]) : 0);
                                variantPs.setInt(5, variantStocks[i] != null && !variantStocks[i].trim().isEmpty() ? Integer.parseInt(variantStocks[i]) : 0);
                                variantPs.executeUpdate();
                            }
                        }
                        variantPs.close();
                    }
                }
                
                ps.close();
                message = "Product added successfully!";
                messageType = "success";
            } catch (Exception e) {
                message = "Error adding product: " + e.getMessage();
                messageType = "error";
            }
        }
        
        else if ("edit_product".equals(action)) {
            String productId = request.getParameter("product_id");
            String name = request.getParameter("product_name");
            String price = request.getParameter("product_price");
            String imageUrl = request.getParameter("product_image");
            String categoryId = request.getParameter("product_category");
            String stock = request.getParameter("product_stock");
            String description = request.getParameter("product_description");
            String sku = request.getParameter("product_sku");
            
            try {
                PreparedStatement ps = conn.prepareStatement(
                    "UPDATE product SET name=?, price=?, image_url=?, category_id=?, stock=?, description=?, sku=? WHERE id=?");
                ps.setString(1, name);
                ps.setDouble(2, Double.parseDouble(price));
                ps.setString(3, imageUrl);
                ps.setInt(4, Integer.parseInt(categoryId));
                ps.setInt(5, Integer.parseInt(stock));
                ps.setString(6, description);
                ps.setString(7, sku);
                ps.setInt(8, Integer.parseInt(productId));
                ps.executeUpdate();
                ps.close();
                message = "Product updated successfully!";
                messageType = "success";
            } catch (Exception e) {
                message = "Error updating product: " + e.getMessage();
                messageType = "error";
            }
        }
        
        else if ("delete_product".equals(action)) {
            String productId = request.getParameter("product_id");
            try {
                PreparedStatement ps = conn.prepareStatement("DELETE FROM product WHERE id=?");
                ps.setInt(1, Integer.parseInt(productId));
                ps.executeUpdate();
                ps.close();
                message = "Product deleted successfully!";
                messageType = "success";
            } catch (Exception e) {
                message = "Error deleting product: " + e.getMessage();
                messageType = "error";
            }
        }
        
        // ORDER STATUS UPDATE
        else if ("update_order_status".equals(action)) {
            String tableName = request.getParameter("table_name");
            String orderId = request.getParameter("order_id");
            String newStatus = request.getParameter("new_status");
            
            try {
                PreparedStatement ps = conn.prepareStatement(
                    "UPDATE " + tableName + " SET status=? WHERE id=?");
                ps.setString(1, newStatus);
                ps.setInt(2, Integer.parseInt(orderId));
                ps.executeUpdate();
                ps.close();
                message = "Order status updated successfully!";
                messageType = "success";
            } catch (Exception e) {
                message = "Error updating order status: " + e.getMessage();
                messageType = "error";
            }
        }
    }

    // Get current view
    String currentView = request.getParameter("view");
    if (currentView == null) currentView = "dashboard";

    // Get system statistics
    int totalUsers = 0;
    int totalOrders = 0;
    double totalRevenue = 0.0;
    int totalProducts = 0;
    int lowStockProducts = 0;
    int totalCategories = 0;

    // Get total products and low stock
    try {
      PreparedStatement ps = conn.prepareStatement(   "SELECT COUNT(*) AS total FROM product");
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
              totalProducts = rs.getInt("total");
}
rs.close();
ps.close();

    } catch (Exception e) {
        // Handle error
    }

    // Get total categories
    try {
        PreparedStatement ps = conn.prepareStatement("SELECT COUNT(*) FROM category");
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            totalCategories = rs.getInt(1);
        }
        rs.close();
        ps.close();
    } catch (Exception e) {
        // Handle error
    }

    // Get total users
    try {
        PreparedStatement ps = conn.prepareStatement("SELECT COUNT(*) FROM register");
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            totalUsers = rs.getInt(1);
        }
        rs.close();
        ps.close();
    } catch (Exception e) {
        // Handle error
    }

    // Get all user tables and calculate order statistics
    List<Map<String, Object>> userTables = new ArrayList<>();
    try {
        PreparedStatement ps = conn.prepareStatement(
            "SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name LIKE 'orders_%'");
        ResultSet rs = ps.executeQuery();
        
        while (rs.next()) {
            String tableName = rs.getString("table_name");
            String username = tableName.substring(7).replace("_", " ");
            
            try {
                PreparedStatement userPs = conn.prepareStatement(
                    "SELECT COUNT(*) as order_count, COALESCE(SUM(total_amount), 0) as total_spent, MAX(order_date) as last_order FROM " + tableName);
                ResultSet userRs = userPs.executeQuery();
                
                if (userRs.next()) {
                    Map<String, Object> userInfo = new HashMap<>();
                    userInfo.put("username", username);
                    userInfo.put("table_name", tableName);
                    userInfo.put("order_count", userRs.getInt("order_count"));
                    userInfo.put("total_spent", userRs.getDouble("total_spent"));
                    userInfo.put("last_order", userRs.getTimestamp("last_order"));
                    userTables.add(userInfo);
                    
                    totalOrders += userRs.getInt("order_count");
                    totalRevenue += userRs.getDouble("total_spent");
                }
                userRs.close();
                userPs.close();
            } catch (Exception e) {
                // Handle individual table errors
            }
        }
        rs.close();
        ps.close();
    } catch (Exception e) {
        // Handle error
    }

    // Get all orders for order tracking
    List<Map<String, Object>> allOrders = new ArrayList<>();
    String orderSearch = request.getParameter("order_search");
    String statusFilter = request.getParameter("status_filter");
    
    for (Map<String, Object> userTable : userTables) {
        String tableName = (String) userTable.get("table_name");
        try {
            String sql = "SELECT *, '" + userTable.get("username") + "' as display_username, '" + tableName + "' as table_name FROM " + tableName + " WHERE 1=1";
            
            if (orderSearch != null && !orderSearch.trim().isEmpty()) {
                sql += " AND (LOWER(product_name) LIKE '%" + orderSearch.toLowerCase() + "%' OR tracking_number LIKE '%" + orderSearch + "%')";
            }
            if (statusFilter != null && !statusFilter.trim().isEmpty()) {
                sql += " AND status = '" + statusFilter + "'";
            }
            
            sql += " ORDER BY order_date DESC";
            
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            while (rs.next()) {
                Map<String, Object> order = new HashMap<>();
                order.put("id", rs.getInt("id"));
                order.put("username", rs.getString("display_username"));
                order.put("product_name", rs.getString("product_name"));
                order.put("quantity", rs.getInt("quantity"));
                order.put("total_amount", rs.getDouble("total_amount"));
                order.put("status", rs.getString("status"));
                order.put("order_date", rs.getTimestamp("order_date"));
                order.put("tracking_number", rs.getString("tracking_number"));
                order.put("table_name", rs.getString("table_name"));
                allOrders.add(order);
            }
            rs.close();
            ps.close();
        } catch (Exception e) {
            // Handle error
        }
    }

    // Sort all orders by date
    allOrders.sort((a, b) -> ((java.util.Date)b.get("order_date")).compareTo((java.util.Date)a.get("order_date")));

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Enhanced Admin Dashboard - ShopHub</title>\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap\" rel=\"stylesheet\">\n");
      out.write("    <style>\n");
      out.write("        * {\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            box-sizing: border-box;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        body {\n");
      out.write("            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n");
      out.write("            background-color: #f8fafc;\n");
      out.write("            color: #2d3748;\n");
      out.write("            line-height: 1.6;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Admin Header */\n");
      out.write("        .admin-header {\n");
      out.write("            background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%);\n");
      out.write("            color: white;\n");
      out.write("            padding: 15px 0;\n");
      out.write("            position: fixed;\n");
      out.write("            top: 0;\n");
      out.write("            width: 100%;\n");
      out.write("            z-index: 1000;\n");
      out.write("            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-nav {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            align-items: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-brand {\n");
      out.write("            font-size: 24px;\n");
      out.write("            font-weight: 700;\n");
      out.write("            color: white;\n");
      out.write("            text-decoration: none;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            gap: 8px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-user {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            gap: 16px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-avatar {\n");
      out.write("            width: 40px;\n");
      out.write("            height: 40px;\n");
      out.write("            background: linear-gradient(135deg, #ff6b35 0%, #f7931e 100%);\n");
      out.write("            border-radius: 50%;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: center;\n");
      out.write("            font-weight: 600;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-info h6 {\n");
      out.write("            margin: 0;\n");
      out.write("            font-weight: 600;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-info p {\n");
      out.write("            margin: 0;\n");
      out.write("            font-size: 14px;\n");
      out.write("            opacity: 0.8;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .logout-btn {\n");
      out.write("            background: rgba(255, 255, 255, 0.1);\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.2);\n");
      out.write("            color: white;\n");
      out.write("            padding: 8px 16px;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            text-decoration: none;\n");
      out.write("            font-size: 14px;\n");
      out.write("            transition: all 0.2s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .logout-btn:hover {\n");
      out.write("            background: rgba(255, 255, 255, 0.2);\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Sidebar */\n");
      out.write("        .admin-sidebar {\n");
      out.write("            position: fixed;\n");
      out.write("            left: 0;\n");
      out.write("            top: 70px;\n");
      out.write("            width: 250px;\n");
      out.write("            height: calc(100vh - 70px);\n");
      out.write("            background: white;\n");
      out.write("            border-right: 1px solid #e2e8f0;\n");
      out.write("            padding: 20px 0;\n");
      out.write("            overflow-y: auto;\n");
      out.write("            z-index: 999;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .sidebar-menu {\n");
      out.write("            list-style: none;\n");
      out.write("            padding: 0;\n");
      out.write("            margin: 0;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .sidebar-menu li {\n");
      out.write("            margin-bottom: 4px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .sidebar-menu a {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            padding: 12px 20px;\n");
      out.write("            color: #4a5568;\n");
      out.write("            text-decoration: none;\n");
      out.write("            font-weight: 500;\n");
      out.write("            transition: all 0.2s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .sidebar-menu a:hover,\n");
      out.write("        .sidebar-menu a.active {\n");
      out.write("            background: #f7fafc;\n");
      out.write("            color: #ff6b35;\n");
      out.write("            border-right: 3px solid #ff6b35;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .sidebar-menu i {\n");
      out.write("            width: 20px;\n");
      out.write("            margin-right: 12px;\n");
      out.write("            font-size: 16px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Main Content */\n");
      out.write("        .admin-main {\n");
      out.write("            margin-left: 250px;\n");
      out.write("            margin-top: 70px;\n");
      out.write("            padding: 30px;\n");
      out.write("            min-height: calc(100vh - 70px);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .page-header {\n");
      out.write("            margin-bottom: 30px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .page-title {\n");
      out.write("            font-size: 28px;\n");
      out.write("            font-weight: 700;\n");
      out.write("            color: #2d3748;\n");
      out.write("            margin-bottom: 8px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .page-subtitle {\n");
      out.write("            color: #718096;\n");
      out.write("            font-size: 16px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Stats Cards */\n");
      out.write("        .stats-grid {\n");
      out.write("            display: grid;\n");
      out.write("            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n");
      out.write("            gap: 24px;\n");
      out.write("            margin-bottom: 40px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card {\n");
      out.write("            background: white;\n");
      out.write("            border-radius: 12px;\n");
      out.write("            padding: 24px;\n");
      out.write("            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n");
      out.write("            border: 1px solid #e2e8f0;\n");
      out.write("            transition: transform 0.2s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-card:hover {\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-header {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            align-items: center;\n");
      out.write("            margin-bottom: 16px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-icon {\n");
      out.write("            width: 48px;\n");
      out.write("            height: 48px;\n");
      out.write("            border-radius: 12px;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: center;\n");
      out.write("            font-size: 20px;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-icon.users { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); }\n");
      out.write("        .stat-icon.orders { background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); }\n");
      out.write("        .stat-icon.revenue { background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); }\n");
      out.write("        .stat-icon.products { background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%); }\n");
      out.write("        .stat-icon.categories { background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); }\n");
      out.write("        .stat-icon.warning { background: linear-gradient(135deg, #fa709a 0%, #fee140 100%); }\n");
      out.write("\n");
      out.write("        .stat-value {\n");
      out.write("            font-size: 28px;\n");
      out.write("            font-weight: 700;\n");
      out.write("            color: #2d3748;\n");
      out.write("            margin-bottom: 4px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .stat-label {\n");
      out.write("            color: #718096;\n");
      out.write("            font-size: 14px;\n");
      out.write("            font-weight: 500;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Content Sections */\n");
      out.write("        .content-section {\n");
      out.write("            background: white;\n");
      out.write("            border-radius: 12px;\n");
      out.write("            padding: 24px;\n");
      out.write("            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n");
      out.write("            border: 1px solid #e2e8f0;\n");
      out.write("            margin-bottom: 30px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .section-title {\n");
      out.write("            font-size: 20px;\n");
      out.write("            font-weight: 700;\n");
      out.write("            color: #2d3748;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            gap: 12px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Tables */\n");
      out.write("        .admin-table {\n");
      out.write("            width: 100%;\n");
      out.write("            border-collapse: collapse;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-table th {\n");
      out.write("            background: #f7fafc;\n");
      out.write("            padding: 12px 16px;\n");
      out.write("            text-align: left;\n");
      out.write("            font-weight: 600;\n");
      out.write("            color: #4a5568;\n");
      out.write("            border-bottom: 1px solid #e2e8f0;\n");
      out.write("            font-size: 14px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-table td {\n");
      out.write("            padding: 12px 16px;\n");
      out.write("            border-bottom: 1px solid #e2e8f0;\n");
      out.write("            font-size: 14px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .admin-table tr:hover {\n");
      out.write("            background: #f7fafc;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .status-badge {\n");
      out.write("            display: inline-flex;\n");
      out.write("            align-items: center;\n");
      out.write("            gap: 4px;\n");
      out.write("            padding: 4px 8px;\n");
      out.write("            border-radius: 12px;\n");
      out.write("            font-size: 12px;\n");
      out.write("            font-weight: 600;\n");
      out.write("            text-transform: uppercase;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .status-processing { background: #fef5e7; color: #d69e2e; }\n");
      out.write("        .status-shipped { background: #e6fffa; color: #319795; }\n");
      out.write("        .status-delivered { background: #f0fff4; color: #38a169; }\n");
      out.write("        .status-pending { background: #edf2f7; color: #718096; }\n");
      out.write("        .status-active { background: #f0fff4; color: #38a169; }\n");
      out.write("        .status-inactive { background: #fed7d7; color: #e53e3e; }\n");
      out.write("\n");
      out.write("        .user-avatar {\n");
      out.write("            width: 32px;\n");
      out.write("            height: 32px;\n");
      out.write("            background: linear-gradient(135deg, #ff6b35 0%, #f7931e 100%);\n");
      out.write("            border-radius: 50%;\n");
      out.write("            display: inline-flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: center;\n");
      out.write("            color: white;\n");
      out.write("            font-weight: 600;\n");
      out.write("            font-size: 12px;\n");
      out.write("            margin-right: 8px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Buttons */\n");
      out.write("        .btn-primary {\n");
      out.write("            background: linear-gradient(135deg, #ff6b35 0%, #f7931e 100%);\n");
      out.write("            border: none;\n");
      out.write("            color: white;\n");
      out.write("            font-weight: 600;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            padding: 10px 20px;\n");
      out.write("            font-size: 14px;\n");
      out.write("            transition: all 0.2s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-primary:hover {\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("            box-shadow: 0 4px 12px rgba(255, 107, 53, 0.3);\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-sm {\n");
      out.write("            padding: 6px 12px;\n");
      out.write("            font-size: 12px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-success {\n");
      out.write("            background: #38a169;\n");
      out.write("            border: none;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-danger {\n");
      out.write("            background: #e53e3e;\n");
      out.write("            border: none;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-warning {\n");
      out.write("            background: #d69e2e;\n");
      out.write("            border: none;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-info {\n");
      out.write("            background: #3182ce;\n");
      out.write("            border: none;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Forms */\n");
      out.write("        .form-control {\n");
      out.write("            border: 1px solid #e2e8f0;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            padding: 10px 12px;\n");
      out.write("            font-size: 14px;\n");
      out.write("            transition: border-color 0.2s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-control:focus {\n");
      out.write("            border-color: #ff6b35;\n");
      out.write("            box-shadow: 0 0 0 2px rgba(255, 107, 53, 0.1);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Modals */\n");
      out.write("        .modal-content {\n");
      out.write("            border-radius: 12px;\n");
      out.write("            border: none;\n");
      out.write("            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .modal-header {\n");
      out.write("            border-bottom: 1px solid #e2e8f0;\n");
      out.write("            padding: 20px 24px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .modal-body {\n");
      out.write("            padding: 24px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .modal-footer {\n");
      out.write("            border-top: 1px solid #e2e8f0;\n");
      out.write("            padding: 20px 24px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Alerts */\n");
      out.write("        .alert {\n");
      out.write("            border-radius: 8px;\n");
      out.write("            border: none;\n");
      out.write("            padding: 12px 16px;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .alert-success {\n");
      out.write("            background: #f0fff4;\n");
      out.write("            color: #38a169;\n");
      out.write("            border-left: 4px solid #38a169;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .alert-danger {\n");
      out.write("            background: #fed7d7;\n");
      out.write("            color: #e53e3e;\n");
      out.write("            border-left: 4px solid #e53e3e;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Search and Filter */\n");
      out.write("        .search-filter-bar {\n");
      out.write("            display: flex;\n");
      out.write("            gap: 16px;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("            flex-wrap: wrap;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .search-filter-bar .form-control {\n");
      out.write("            min-width: 200px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Action Buttons */\n");
      out.write("        .action-buttons {\n");
      out.write("            display: flex;\n");
      out.write("            gap: 8px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Bulk Actions */\n");
      out.write("        .bulk-actions {\n");
      out.write("            background: #f7fafc;\n");
      out.write("            padding: 16px;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("            display: none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .bulk-actions.show {\n");
      out.write("            display: block;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Variants */\n");
      out.write("        .variant-row {\n");
      out.write("            background: #f8f9fa;\n");
      out.write("            padding: 10px;\n");
      out.write("            margin: 5px 0;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            border: 1px solid #dee2e6;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Responsive */\n");
      out.write("        @media (max-width: 768px) {\n");
      out.write("            .admin-sidebar {\n");
      out.write("                transform: translateX(-100%);\n");
      out.write("                transition: transform 0.3s ease;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .admin-sidebar.show {\n");
      out.write("                transform: translateX(0);\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .admin-main {\n");
      out.write("                margin-left: 0;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .stats-grid {\n");
      out.write("                grid-template-columns: 1fr;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .admin-table {\n");
      out.write("                font-size: 12px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .admin-table th,\n");
      out.write("            .admin-table td {\n");
      out.write("                padding: 8px 12px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .search-filter-bar {\n");
      out.write("                flex-direction: column;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .search-filter-bar .form-control {\n");
      out.write("                min-width: auto;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .fade-in {\n");
      out.write("            animation: fadeIn 0.5s ease-in;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        @keyframes fadeIn {\n");
      out.write("            from { opacity: 0; transform: translateY(20px); }\n");
      out.write("            to { opacity: 1; transform: translateY(0); }\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <!-- Admin Header -->\n");
      out.write("    <header class=\"admin-header\">\n");
      out.write("        <div class=\"container-fluid\">\n");
      out.write("            <nav class=\"admin-nav\">\n");
      out.write("                <a href=\"enhanced-admin-dashboard.jsp\" class=\"admin-brand\">\n");
      out.write("                    <i class=\"fas fa-shield-alt\"></i>\n");
      out.write("                    ShopHub Admin Pro\n");
      out.write("                </a>\n");
      out.write("                \n");
      out.write("                <div class=\"admin-user\">\n");
      out.write("                    <div class=\"admin-avatar\">\n");
      out.write("                        ");
      out.print( adminName != null ? adminName.substring(0, 1).toUpperCase() : "A" );
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"admin-info\">\n");
      out.write("                        <h6>");
      out.print( adminName != null ? adminName : adminUsername );
      out.write("</h6>\n");
      out.write("                        <p>System Administrator</p>\n");
      out.write("                    </div>\n");
      out.write("                    <a href=\"enhanced-admin-dashboard.jsp?logout=true\" class=\"logout-btn\">\n");
      out.write("                        <i class=\"fas fa-sign-out-alt me-2\"></i>\n");
      out.write("                        Logout\n");
      out.write("                    </a>\n");
      out.write("                </div>\n");
      out.write("            </nav>\n");
      out.write("        </div>\n");
      out.write("    </header>\n");
      out.write("\n");
      out.write("    <!-- Sidebar -->\n");
      out.write("    <aside class=\"admin-sidebar\">\n");
      out.write("        <ul class=\"sidebar-menu\">\n");
      out.write("            <li><a href=\"?view=dashboard\" class=\"");
      out.print( "dashboard".equals(currentView) ? "active" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-tachometer-alt\"></i>Dashboard\n");
      out.write("            </a></li>\n");
      out.write("            <li><a href=\"?view=orders\" class=\"");
      out.print( "orders".equals(currentView) ? "active" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-shopping-cart\"></i>Order Tracking\n");
      out.write("            </a></li>\n");
      out.write("            <li><a href=\"?view=products\" class=\"");
      out.print( "products".equals(currentView) ? "active" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-box\"></i>Product Management\n");
      out.write("            </a></li>\n");
      out.write("            <li><a href=\"?view=categories\" class=\"");
      out.print( "categories".equals(currentView) ? "active" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-tags\"></i>Categories\n");
      out.write("            </a></li>\n");
      out.write("            <li><a href=\"?view=variants\" class=\"");
      out.print( "variants".equals(currentView) ? "active" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-layer-group\"></i>Product Variants\n");
      out.write("            </a></li>\n");
      out.write("            <li><a href=\"?view=users\" class=\"");
      out.print( "users".equals(currentView) ? "active" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-users\"></i>Users\n");
      out.write("            </a></li>\n");
      out.write("            <li><a href=\"?view=import_export\" class=\"");
      out.print( "import_export".equals(currentView) ? "active" : "" );
      out.write("\">\n");
      out.write("                <i class=\"fas fa-exchange-alt\"></i>Import/Export\n");
      out.write("            </a></li>\n");
      out.write("            <li><a href=\"dashboard.jsp\" target=\"_blank\">\n");
      out.write("                <i class=\"fas fa-external-link-alt\"></i>View Store\n");
      out.write("            </a></li>\n");
      out.write("        </ul>\n");
      out.write("    </aside>\n");
      out.write("\n");
      out.write("    <!-- Main Content -->\n");
      out.write("    <main class=\"admin-main\">\n");
      out.write("        <div class=\"fade-in\">\n");
      out.write("            <!-- Alert Messages -->\n");
      out.write("            ");
 if (!message.isEmpty()) { 
      out.write("\n");
      out.write("                <div class=\"alert alert-");
      out.print( "success".equals(messageType) ? "success" : "danger" );
      out.write("\">\n");
      out.write("                    <i class=\"fas fa-");
      out.print( "success".equals(messageType) ? "check-circle" : "exclamation-circle" );
      out.write(" me-2\"></i>\n");
      out.write("                    ");
      out.print( message );
      out.write("\n");
      out.write("                </div>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("            ");
 if ("dashboard".equals(currentView)) { 
      out.write("\n");
      out.write("                <!-- Dashboard View -->\n");
      out.write("                <div class=\"page-header\">\n");
      out.write("                    <h1 class=\"page-title\">Enhanced Dashboard Overview</h1>\n");
      out.write("                    <p class=\"page-subtitle\">Welcome back, ");
      out.print( adminName );
      out.write("! Here's what's happening with your store today.</p>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Statistics Cards -->\n");
      out.write("                <div class=\"stats-grid\">\n");
      out.write("                    <div class=\"stat-card\">\n");
      out.write("                        <div class=\"stat-header\">\n");
      out.write("                            <div>\n");
      out.write("                                <div class=\"stat-value\">");
      out.print( totalUsers );
      out.write("</div>\n");
      out.write("                                <div class=\"stat-label\">Total Users</div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"stat-icon users\">\n");
      out.write("                                <i class=\"fas fa-users\"></i>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div class=\"stat-card\">\n");
      out.write("                        <div class=\"stat-header\">\n");
      out.write("                            <div>\n");
      out.write("                                <div class=\"stat-value\">");
      out.print( totalOrders );
      out.write("</div>\n");
      out.write("                                <div class=\"stat-label\">Total Orders</div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"stat-icon orders\">\n");
      out.write("                                <i class=\"fas fa-shopping-cart\"></i>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div class=\"stat-card\">\n");
      out.write("                        <div class=\"stat-header\">\n");
      out.write("                            <div>\n");
      out.write("                                <div class=\"stat-value\">₹");
      out.print( String.format("%.0f", totalRevenue) );
      out.write("</div>\n");
      out.write("                                <div class=\"stat-label\">Total Revenue</div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"stat-icon revenue\">\n");
      out.write("                                <i class=\"fas fa-chart-line\"></i>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div class=\"stat-card\">\n");
      out.write("                        <div class=\"stat-header\">\n");
      out.write("                            <div>\n");
      out.write("                                <div class=\"stat-value\">");
      out.print( totalProducts );
      out.write("</div>\n");
      out.write("                                <div class=\"stat-label\">Total Products</div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"stat-icon products\">\n");
      out.write("                                <i class=\"fas fa-box\"></i>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div class=\"stat-card\">\n");
      out.write("                        <div class=\"stat-header\">\n");
      out.write("                            <div>\n");
      out.write("                                <div class=\"stat-value\">");
      out.print( totalCategories );
      out.write("</div>\n");
      out.write("                                <div class=\"stat-label\">Categories</div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"stat-icon categories\">\n");
      out.write("                                <i class=\"fas fa-tags\"></i>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    ");
 if (lowStockProducts > 0) { 
      out.write("\n");
      out.write("                    <div class=\"stat-card\">\n");
      out.write("                        <div class=\"stat-header\">\n");
      out.write("                            <div>\n");
      out.write("                                <div class=\"stat-value\">");
      out.print( lowStockProducts );
      out.write("</div>\n");
      out.write("                                <div class=\"stat-label\">Low Stock Alert</div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"stat-icon warning\">\n");
      out.write("                                <i class=\"fas fa-exclamation-triangle\"></i>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Recent Orders -->\n");
      out.write("                <div class=\"content-section\">\n");
      out.write("                    <h2 class=\"section-title\">\n");
      out.write("                        <i class=\"fas fa-clock\"></i>\n");
      out.write("                        Recent Orders\n");
      out.write("                    </h2>\n");
      out.write("                    <div style=\"overflow-x: auto;\">\n");
      out.write("                        <table class=\"admin-table\">\n");
      out.write("                            <thead>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>Order ID</th>\n");
      out.write("                                    <th>Customer</th>\n");
      out.write("                                    <th>Product</th>\n");
      out.write("                                    <th>Amount</th>\n");
      out.write("                                    <th>Status</th>\n");
      out.write("                                    <th>Date</th>\n");
      out.write("                                </tr>\n");
      out.write("                            </thead>\n");
      out.write("                            <tbody>\n");
      out.write("                                ");
 
                                    List<Map<String, Object>> recentOrders = allOrders.size() > 10 ? 
                                        allOrders.subList(0, 10) : allOrders;
                                    
                                    if (recentOrders.isEmpty()) { 
                                
      out.write("\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td colspan=\"6\" style=\"text-align: center; color: #718096; padding: 40px;\">\n");
      out.write("                                            <i class=\"fas fa-shopping-cart\" style=\"font-size: 24px; margin-bottom: 8px; display: block;\"></i>\n");
      out.write("                                            No orders found\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                ");
 } else { 
      out.write("\n");
      out.write("                                    ");
 for (Map<String, Object> order : recentOrders) { 
      out.write("\n");
      out.write("                                        <tr>\n");
      out.write("                                            <td>#");
      out.print( order.get("id") );
      out.write("</td>\n");
      out.write("                                            <td>\n");
      out.write("                                                <div style=\"display: flex; align-items: center;\">\n");
      out.write("                                                    <div class=\"user-avatar\">\n");
      out.write("                                                        ");
      out.print( ((String)order.get("username")).substring(0, 1).toUpperCase() );
      out.write("\n");
      out.write("                                                    </div>\n");
      out.write("                                                    ");
      out.print( order.get("username") );
      out.write("\n");
      out.write("                                                </div>\n");
      out.write("                                            </td>\n");
      out.write("                                            <td>");
      out.print( order.get("product_name") );
      out.write("</td>\n");
      out.write("                                            <td>₹");
      out.print( String.format("%.2f", (Double)order.get("total_amount")) );
      out.write("</td>\n");
      out.write("                                            <td>\n");
      out.write("                                                <span class=\"status-badge status-");
      out.print( order.get("status") );
      out.write("\">\n");
      out.write("                                                    ");
      out.print( ((String)order.get("status")).toUpperCase() );
      out.write("\n");
      out.write("                                                </span>\n");
      out.write("                                            </td>\n");
      out.write("                                            <td>");
      out.print( new java.text.SimpleDateFormat("MMM dd, yyyy").format((java.util.Date)order.get("order_date")) );
      out.write("</td>\n");
      out.write("                                        </tr>\n");
      out.write("                                    ");
 } 
      out.write("\n");
      out.write("                                ");
 } 
      out.write("\n");
      out.write("                            </tbody>\n");
      out.write("                        </table>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("            ");
 } else if ("products".equals(currentView)) { 
      out.write("\n");
      out.write("                <!-- Enhanced Product Management View -->\n");
      out.write("                <div class=\"page-header\">\n");
      out.write("                    <h1 class=\"page-title\">Enhanced Product Management</h1>\n");
      out.write("                    <p class=\"page-subtitle\">Manage your product catalog with advanced features</p>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Action Buttons -->\n");
      out.write("                <div class=\"mb-3 d-flex gap-2 flex-wrap\">\n");
      out.write("                    <button class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#addProductModal\">\n");
      out.write("                        <i class=\"fas fa-plus me-2\"></i>Add New Product\n");
      out.write("                    </button>\n");
      out.write("                    <a href=\"?action=export_csv\" class=\"btn btn-success\">\n");
      out.write("                        <i class=\"fas fa-download me-2\"></i>Export CSV\n");
      out.write("                    </a>\n");
      out.write("                    <button class=\"btn btn-info\" onclick=\"alert('CSV Import feature will be available with file upload library')\">\n");
      out.write("                        <i class=\"fas fa-upload me-2\"></i>Import CSV\n");
      out.write("                    </button>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Bulk Actions Bar -->\n");
      out.write("                <div class=\"bulk-actions\" id=\"bulkActions\">\n");
      out.write("                    <div class=\"d-flex gap-2 align-items-center\">\n");
      out.write("                        <span class=\"fw-bold\">Bulk Actions:</span>\n");
      out.write("                        <button class=\"btn btn-sm btn-warning\" onclick=\"bulkUpdateStatus('active')\">\n");
      out.write("                            <i class=\"fas fa-check me-1\"></i>Activate\n");
      out.write("                        </button>\n");
      out.write("                        <button class=\"btn btn-sm btn-secondary\" onclick=\"bulkUpdateStatus('inactive')\">\n");
      out.write("                            <i class=\"fas fa-pause me-1\"></i>Deactivate\n");
      out.write("                        </button>\n");
      out.write("                        <button class=\"btn btn-sm btn-danger\" onclick=\"bulkDelete()\">\n");
      out.write("                            <i class=\"fas fa-trash me-1\"></i>Delete Selected\n");
      out.write("                        </button>\n");
      out.write("                        <span class=\"ms-auto\">\n");
      out.write("                            <span id=\"selectedCount\">0</span> items selected\n");
      out.write("                        </span>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Products Table -->\n");
      out.write("                <div class=\"content-section\">\n");
      out.write("                    <h2 class=\"section-title\">\n");
      out.write("                        <i class=\"fas fa-box\"></i>\n");
      out.write("                        Product Inventory\n");
      out.write("                    </h2>\n");
      out.write("                    <div style=\"overflow-x: auto;\">\n");
      out.write("                        <form id=\"bulkForm\">\n");
      out.write("                            <table class=\"admin-table\">\n");
      out.write("                                <thead>\n");
      out.write("                                    <tr>\n");
      out.write("                                        <th>\n");
      out.write("                                            <input type=\"checkbox\" id=\"selectAll\" onchange=\"toggleSelectAll()\">\n");
      out.write("                                        </th>\n");
      out.write("                                        <th>Product</th>\n");
      out.write("                                        <th>SKU</th>\n");
      out.write("                                        <th>Category</th>\n");
      out.write("                                        <th>Price</th>\n");
      out.write("                                        <th>Stock</th>\n");
      out.write("                                        <th>Status</th>\n");
      out.write("                                        <th>Variants</th>\n");
      out.write("                                        <th>Created</th>\n");
      out.write("                                        <th>Actions</th>\n");
      out.write("                                    </tr>\n");
      out.write("                                </thead>\n");
      out.write("                                <tbody>\n");

    PreparedStatement prodStmt = conn.prepareStatement(
        "SELECT p.*, c.name AS category_name FROM product p JOIN category c ON p.category_id = c.id"
    );
    ResultSet products = prodStmt.executeQuery();
    while (products.next()) {

      out.write("\n");
      out.write("    <tr>\n");
      out.write("        <td>\n");
      out.write("            <input type=\"checkbox\" name=\"selected_products\" value=\"");
      out.print( products.getInt("id") );
      out.write("\" onchange=\"updateBulkActions()\">\n");
      out.write("        </td>\n");
      out.write("        <td>\n");
      out.write("            <div style=\"display: flex; align-items: center;\">\n");
      out.write("                <img src=\"");
      out.print( products.getString("image_url") );
      out.write("\" \n");
      out.write("                     style=\"width: 40px; height: 40px; object-fit: cover; border-radius: 8px; margin-right: 12px;\"\n");
      out.write("                     onerror=\"this.src='https://via.placeholder.com/40x40/f7fafc/718096?text=P'\">\n");
      out.write("                <div>\n");
      out.write("                    <div>");
      out.print( products.getString("name") );
      out.write("</div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </td>\n");
      out.write("        <td><span class=\"text-muted\">—</span></td> <!-- SKU placeholder -->\n");
      out.write("        <td>");
      out.print( products.getString("category_name") );
      out.write("</td>\n");
      out.write("        <td>₹");
      out.print( String.format("%.2f", products.getDouble("price")) );
      out.write("</td>\n");
      out.write("        <td><span class=\"text-muted\">—</span></td> <!-- Stock placeholder -->\n");
      out.write("        <td><span class=\"text-muted\">—</span></td> <!-- Status placeholder -->\n");
      out.write("        <td><span class=\"text-muted\">—</span></td> <!-- Variants placeholder -->\n");
      out.write("        <td><span class=\"text-muted\">—</span></td> <!-- Created date placeholder -->\n");
      out.write("        <td>\n");
      out.write("            <div class=\"action-buttons\">\n");
      out.write("                <button class=\"btn btn-sm btn-primary\" \n");
      out.write("                        onclick=\"editProduct(");
      out.print( products.getInt("id") );
      out.write(',');
      out.write(' ');
      out.write('\'');
      out.print( products.getString("name").replace("'", "\\'") );
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print( products.getDouble("price") );
      out.write(',');
      out.write(' ');
      out.write('\'');
      out.print( products.getString("image_url") );
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print( products.getInt("category_id") );
      out.write(")\">\n");
      out.write("                    <i class=\"fas fa-edit\"></i>\n");
      out.write("                </button>\n");
      out.write("                <button class=\"btn btn-sm btn-danger\" \n");
      out.write("                        onclick=\"deleteProduct(");
      out.print( products.getInt("id") );
      out.write(',');
      out.write(' ');
      out.write('\'');
      out.print( products.getString("name").replace("'", "\\'") );
      out.write("')\">\n");
      out.write("                    <i class=\"fas fa-trash\"></i>\n");
      out.write("                </button>\n");
      out.write("            </div>\n");
      out.write("        </td>\n");
      out.write("    </tr>\n");
      out.write("    \n");
      out.write("    \n");

    }
    products.close();
    prodStmt.close();

      out.write("\n");
      out.write("</tbody>\n");
      out.write("\n");
      out.write("                            </table>\n");
      out.write("                        </form>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("            ");
 } else if ("categories".equals(currentView)) { 
      out.write("\n");
      out.write("                <!-- Category Management View -->\n");
      out.write("                <div class=\"page-header\">\n");
      out.write("                    <h1 class=\"page-title\">Category Management</h1>\n");
      out.write("                    <p class=\"page-subtitle\">Organize your products with categories</p>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Add Category Button -->\n");
      out.write("                <div class=\"mb-3\">\n");
      out.write("                    <button class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#addCategoryModal\">\n");
      out.write("                        <i class=\"fas fa-plus me-2\"></i>Add New Category\n");
      out.write("                    </button>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Categories Table -->\n");
      out.write("                <div class=\"content-section\">\n");
      out.write("                    <h2 class=\"section-title\">\n");
      out.write("                        <i class=\"fas fa-tags\"></i>\n");
      out.write("                        Product Categories\n");
      out.write("                    </h2>\n");
      out.write("                    <div style=\"overflow-x: auto;\">\n");
      out.write("                        <table class=\"admin-table\">\n");
      out.write("                            <thead>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>Category Name</th>\n");
      out.write("                                    <th>Description</th>\n");
      out.write("                                    <th>Products Count</th>\n");
      out.write("                                    <th>Created</th>\n");
      out.write("                                    <th>Actions</th>\n");
      out.write("                                </tr>\n");
      out.write("                            </thead>\n");
      out.write("                            <tbody>\n");
      out.write("                                ");

                                    PreparedStatement catStmt = conn.prepareStatement(
                                        "SELECT c.*, COUNT(p.id) as product_count FROM category c " +
                                        "LEFT JOIN product p ON c.id = p.category_id " +
                                        "GROUP BY c.id, c.name, c.description, c.created_at " +
                                        "ORDER BY c.created_at DESC");
                                    ResultSet categories = catStmt.executeQuery();
                                    while (categories.next()) {
                                
      out.write("\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td>\n");
      out.write("                                            <strong>");
      out.print( categories.getString("name") );
      out.write("</strong>\n");
      out.write("                                        </td>\n");
      out.write("                                        <td>");
      out.print( categories.getString("description") != null ? categories.getString("description") : "No description" );
      out.write("</td>\n");
      out.write("                                        <td>\n");
      out.write("                                            <span class=\"badge bg-primary\">");
      out.print( categories.getInt("product_count") );
      out.write(" products</span>\n");
      out.write("                                        </td>\n");
      out.write("                                        <td>");
      out.print( new java.text.SimpleDateFormat("MMM dd, yyyy").format(categories.getTimestamp("created_at")) );
      out.write("</td>\n");
      out.write("                                        <td>\n");
      out.write("                                            <div class=\"action-buttons\">\n");
      out.write("                                                <button class=\"btn btn-sm btn-primary\" \n");
      out.write("                                                        onclick=\"editCategory(");
      out.print( categories.getInt("id") );
      out.write(',');
      out.write(' ');
      out.write('\'');
      out.print( categories.getString("name").replace("'", "\\'") );
      out.write("', '");
      out.print( categories.getString("description") != null ? categories.getString("description").replace("'", "\\'") : "" );
      out.write("')\">\n");
      out.write("                                                    <i class=\"fas fa-edit\"></i>\n");
      out.write("                                                </button>\n");
      out.write("                                                ");
 if (categories.getInt("product_count") == 0) { 
      out.write("\n");
      out.write("                                                    <button class=\"btn btn-sm btn-danger\" \n");
      out.write("                                                            onclick=\"deleteCategory(");
      out.print( categories.getInt("id") );
      out.write(',');
      out.write(' ');
      out.write('\'');
      out.print( categories.getString("name").replace("'", "\\'") );
      out.write("')\">\n");
      out.write("                                                        <i class=\"fas fa-trash\"></i>\n");
      out.write("                                                    </button>\n");
      out.write("                                                ");
 } else { 
      out.write("\n");
      out.write("                                                    <button class=\"btn btn-sm btn-secondary\" disabled title=\"Cannot delete category with products\">\n");
      out.write("                                                        <i class=\"fas fa-lock\"></i>\n");
      out.write("                                                    </button>\n");
      out.write("                                                ");
 } 
      out.write("\n");
      out.write("                                            </div>\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                ");

                                    }
                                    categories.close();
                                    catStmt.close();
                                
      out.write("\n");
      out.write("                            </tbody>\n");
      out.write("                        </table>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("            ");
 } else if ("import_export".equals(currentView)) { 
      out.write("\n");
      out.write("                <!-- Import/Export View -->\n");
      out.write("                <div class=\"page-header\">\n");
      out.write("                    <h1 class=\"page-title\">Import/Export Data</h1>\n");
      out.write("                    <p class=\"page-subtitle\">Bulk import and export your product data</p>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div class=\"row\">\n");
      out.write("                    <div class=\"col-md-6\">\n");
      out.write("                        <div class=\"content-section\">\n");
      out.write("                            <h2 class=\"section-title\">\n");
      out.write("                                <i class=\"fas fa-download\"></i>\n");
      out.write("                                Export Data\n");
      out.write("                            </h2>\n");
      out.write("                            <p>Download your product data in CSV format for backup or analysis.</p>\n");
      out.write("                            <a href=\"?action=export_csv\" class=\"btn btn-success\">\n");
      out.write("                                <i class=\"fas fa-download me-2\"></i>Export Products CSV\n");
      out.write("                            </a>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"col-md-6\">\n");
      out.write("                        <div class=\"content-section\">\n");
      out.write("                            <h2 class=\"section-title\">\n");
      out.write("                                <i class=\"fas fa-upload\"></i>\n");
      out.write("                                Import Data\n");
      out.write("                            </h2>\n");
      out.write("                            <p>Upload a CSV file to bulk import products. Make sure your CSV has the correct format.</p>\n");
      out.write("                            <button class=\"btn btn-primary\" onclick=\"alert('CSV Import requires Apache Commons FileUpload library. Please add the dependency to enable this feature.')\">\n");
      out.write("                                <i class=\"fas fa-upload me-2\"></i>Import Products CSV\n");
      out.write("                            </button>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div class=\"content-section\">\n");
      out.write("                    <h2 class=\"section-title\">\n");
      out.write("                        <i class=\"fas fa-info-circle\"></i>\n");
      out.write("                        CSV Format Guide\n");
      out.write("                    </h2>\n");
      out.write("                    <p>Your CSV file should have the following columns in this exact order:</p>\n");
      out.write("                    <div class=\"table-responsive\">\n");
      out.write("                        <table class=\"table table-bordered\">\n");
      out.write("                            <thead>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>Column</th>\n");
      out.write("                                    <th>Description</th>\n");
      out.write("                                    <th>Required</th>\n");
      out.write("                                    <th>Example</th>\n");
      out.write("                                </tr>\n");
      out.write("                            </thead>\n");
      out.write("                            <tbody>\n");
      out.write("                                <tr>\n");
      out.write("                                    <td>Name</td>\n");
      out.write("                                    <td>Product name</td>\n");
      out.write("                                    <td>Yes</td>\n");
      out.write("                                    <td>Smartphone Pro</td>\n");
      out.write("                                </tr>\n");
      out.write("                                <tr>\n");
      out.write("                                    <td>SKU</td>\n");
      out.write("                                    <td>Stock keeping unit</td>\n");
      out.write("                                    <td>Yes</td>\n");
      out.write("                                    <td>SP001</td>\n");
      out.write("                                </tr>\n");
      out.write("                                <tr>\n");
      out.write("                                    <td>Price</td>\n");
      out.write("                                    <td>Product price</td>\n");
      out.write("                                    <td>Yes</td>\n");
      out.write("                                    <td>15000.00</td>\n");
      out.write("                                </tr>\n");
      out.write("                                <tr>\n");
      out.write("                                    <td>Category</td>\n");
      out.write("                                    <td>Category name (must exist)</td>\n");
      out.write("                                    <td>Yes</td>\n");
      out.write("                                    <td>Electronics</td>\n");
      out.write("                                </tr>\n");
      out.write("                                <tr>\n");
      out.write("                                    <td>Stock</td>\n");
      out.write("                                    <td>Available quantity</td>\n");
      out.write("                                    <td>Yes</td>\n");
      out.write("                                    <td>50</td>\n");
      out.write("                                </tr>\n");
      out.write("                                <tr>\n");
      out.write("                                    <td>Description</td>\n");
      out.write("                                    <td>Product description</td>\n");
      out.write("                                    <td>No</td>\n");
      out.write("                                    <td>Latest smartphone with advanced features</td>\n");
      out.write("                                </tr>\n");
      out.write("                            </tbody>\n");
      out.write("                        </table>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("            ");
 } else if ("variants".equals(currentView)) { 
      out.write("\n");
      out.write("                <!-- Product Variants View -->\n");
      out.write("                <div class=\"page-header\">\n");
      out.write("                    <h1 class=\"page-title\">Product Variants</h1>\n");
      out.write("                    <p class=\"page-subtitle\">Manage product variations like size, color, etc.</p>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div class=\"content-section\">\n");
      out.write("                    <h2 class=\"section-title\">\n");
      out.write("                        <i class=\"fas fa-layer-group\"></i>\n");
      out.write("                        All Product Variants\n");
      out.write("                    </h2>\n");
      out.write("                    <div style=\"overflow-x: auto;\">\n");
      out.write("                        <table class=\"admin-table\">\n");
      out.write("                            <thead>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>Product</th>\n");
      out.write("                                    <th>Variant Type</th>\n");
      out.write("                                    <th>Variant Value</th>\n");
      out.write("                                    <th>Price Modifier</th>\n");
      out.write("                                    <th>Stock</th>\n");
      out.write("                                    <th>SKU</th>\n");
      out.write("                                    <th>Actions</th>\n");
      out.write("                                </tr>\n");
      out.write("                            </thead>\n");
      out.write("                            <tbody>\n");
      out.write("                                ");

                                    PreparedStatement variantStmt = conn.prepareStatement(
                                        "SELECT pv.*, p.name as product_name FROM product_variants pv " +
                                        "JOIN product p ON pv.product_id = p.id ORDER BY p.name, pv.variant_type");
                                    ResultSet variants = variantStmt.executeQuery();
                                    boolean hasVariants = false;
                                    while (variants.next()) {
                                        hasVariants = true;
                                
      out.write("\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td>");
      out.print( variants.getString("product_name") );
      out.write("</td>\n");
      out.write("                                        <td>");
      out.print( variants.getString("variant_type") );
      out.write("</td>\n");
      out.write("                                        <td>");
      out.print( variants.getString("variant_value") );
      out.write("</td>\n");
      out.write("                                        <td>\n");
      out.write("                                            ");
 double modifier = variants.getDouble("price_modifier"); 
      out.write("\n");
      out.write("                                            ");
 if (modifier > 0) { 
      out.write("\n");
      out.write("                                                <span class=\"text-success\">+₹");
      out.print( String.format("%.2f", modifier) );
      out.write("</span>\n");
      out.write("                                            ");
 } else if (modifier < 0) { 
      out.write("\n");
      out.write("                                                <span class=\"text-danger\">-₹");
      out.print( String.format("%.2f", Math.abs(modifier)) );
      out.write("</span>\n");
      out.write("                                            ");
 } else { 
      out.write("\n");
      out.write("                                                <span class=\"text-muted\">₹0.00</span>\n");
      out.write("                                            ");
 } 
      out.write("\n");
      out.write("                                        </td>\n");
      out.write("                                        <td>");
      out.print( variants.getInt("stock") );
      out.write("</td>\n");
      out.write("                                        <td>");
      out.print( variants.getString("sku") != null ? variants.getString("sku") : "N/A" );
      out.write("</td>\n");
      out.write("                                        <td>\n");
      out.write("                                            <div class=\"action-buttons\">\n");
      out.write("                                                <button class=\"btn btn-sm btn-primary\">\n");
      out.write("                                                    <i class=\"fas fa-edit\"></i>\n");
      out.write("                                                </button>\n");
      out.write("                                                <button class=\"btn btn-sm btn-danger\">\n");
      out.write("                                                    <i class=\"fas fa-trash\"></i>\n");
      out.write("                                                </button>\n");
      out.write("                                            </div>\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                ");

                                    }
                                    if (!hasVariants) {
                                
      out.write("\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td colspan=\"7\" style=\"text-align: center; color: #718096; padding: 40px;\">\n");
      out.write("                                            <i class=\"fas fa-layer-group\" style=\"font-size: 24px; margin-bottom: 8px; display: block;\"></i>\n");
      out.write("                                            No product variants found\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                ");

                                    }
                                    variants.close();
                                    variantStmt.close();
                                
      out.write("\n");
      out.write("                            </tbody>\n");
      out.write("                        </table>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("            ");
 } else if ("orders".equals(currentView)) { 
      out.write("\n");
      out.write("                <!-- Order Tracking View -->\n");
      out.write("                <div class=\"page-header\">\n");
      out.write("                    <h1 class=\"page-title\">Order Tracking</h1>\n");
      out.write("                    <p class=\"page-subtitle\">Track and manage all customer orders</p>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Search and Filter -->\n");
      out.write("                <div class=\"content-section\">\n");
      out.write("                    <form method=\"get\" class=\"search-filter-bar\">\n");
      out.write("                        <input type=\"hidden\" name=\"view\" value=\"orders\">\n");
      out.write("                        <input type=\"text\" name=\"order_search\" class=\"form-control\" \n");
      out.write("                               placeholder=\"Search by product name or tracking number...\"\n");
      out.write("                               value=\"");
      out.print( orderSearch != null ? orderSearch : "" );
      out.write("\">\n");
      out.write("                        <select name=\"status_filter\" class=\"form-control\">\n");
      out.write("                            <option value=\"\">All Status</option>\n");
      out.write("                            <option value=\"pending\" ");
      out.print( "pending".equals(statusFilter) ? "selected" : "" );
      out.write(">Pending</option>\n");
      out.write("                            <option value=\"processing\" ");
      out.print( "processing".equals(statusFilter) ? "selected" : "" );
      out.write(">Processing</option>\n");
      out.write("                            <option value=\"shipped\" ");
      out.print( "shipped".equals(statusFilter) ? "selected" : "" );
      out.write(">Shipped</option>\n");
      out.write("                            <option value=\"delivered\" ");
      out.print( "delivered".equals(statusFilter) ? "selected" : "" );
      out.write(">Delivered</option>\n");
      out.write("                        </select>\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-primary\">\n");
      out.write("                            <i class=\"fas fa-search me-2\"></i>Search\n");
      out.write("                        </button>\n");
      out.write("                    </form>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Orders Table -->\n");
      out.write("                <div class=\"content-section\">\n");
      out.write("                    <h2 class=\"section-title\">\n");
      out.write("                        <i class=\"fas fa-list\"></i>\n");
      out.write("                        All Orders (");
      out.print( allOrders.size() );
      out.write(")\n");
      out.write("                    </h2>\n");
      out.write("                    <div style=\"overflow-x: auto;\">\n");
      out.write("                        <table class=\"admin-table\">\n");
      out.write("                            <thead>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>Order ID</th>\n");
      out.write("                                    <th>Customer</th>\n");
      out.write("                                    <th>Product</th>\n");
      out.write("                                    <th>Qty</th>\n");
      out.write("                                    <th>Amount</th>\n");
      out.write("                                    <th>Status</th>\n");
      out.write("                                    <th>Date</th>\n");
      out.write("                                    <th>Tracking</th>\n");
      out.write("                                    <th>Actions</th>\n");
      out.write("                                </tr>\n");
      out.write("                            </thead>\n");
      out.write("                            <tbody>\n");
      out.write("                                ");
 if (allOrders.isEmpty()) { 
      out.write("\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td colspan=\"9\" style=\"text-align: center; color: #718096; padding: 40px;\">\n");
      out.write("                                            <i class=\"fas fa-search\" style=\"font-size: 24px; margin-bottom: 8px; display: block;\"></i>\n");
      out.write("                                            No orders found\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                ");
 } else { 
      out.write("\n");
      out.write("                                    ");
 for (Map<String, Object> order : allOrders) { 
      out.write("\n");
      out.write("                                        <tr>\n");
      out.write("                                            <td>#");
      out.print( order.get("id") );
      out.write("</td>\n");
      out.write("                                            <td>\n");
      out.write("                                                <div style=\"display: flex; align-items: center;\">\n");
      out.write("                                                    <div class=\"user-avatar\">\n");
      out.write("                                                        ");
      out.print( ((String)order.get("username")).substring(0, 1).toUpperCase() );
      out.write("\n");
      out.write("                                                    </div>\n");
      out.write("                                                    ");
      out.print( order.get("username") );
      out.write("\n");
      out.write("                                                </div>\n");
      out.write("                                            </td>\n");
      out.write("                                            <td>");
      out.print( order.get("product_name") );
      out.write("</td>\n");
      out.write("                                            <td>");
      out.print( order.get("quantity") );
      out.write("</td>\n");
      out.write("                                            <td>₹");
      out.print( String.format("%.2f", (Double)order.get("total_amount")) );
      out.write("</td>\n");
      out.write("                                            <td>\n");
      out.write("                                                <span class=\"status-badge status-");
      out.print( order.get("status") );
      out.write("\">\n");
      out.write("                                                    ");
      out.print( ((String)order.get("status")).toUpperCase() );
      out.write("\n");
      out.write("                                                </span>\n");
      out.write("                                            </td>\n");
      out.write("                                            <td>");
      out.print( new java.text.SimpleDateFormat("MMM dd, yyyy HH:mm").format((java.util.Date)order.get("order_date")) );
      out.write("</td>\n");
      out.write("                                            <td><code>");
      out.print( order.get("tracking_number") );
      out.write("</code></td>\n");
      out.write("                                            <td>\n");
      out.write("                                                <div class=\"action-buttons\">\n");
      out.write("                                                    <button class=\"btn btn-sm btn-warning\" \n");
      out.write("                                                            onclick=\"updateOrderStatus('");
      out.print( order.get("table_name") );
      out.write("', '");
      out.print( order.get("id") );
      out.write("', 'processing')\">\n");
      out.write("                                                        <i class=\"fas fa-cog\"></i>\n");
      out.write("                                                    </button>\n");
      out.write("                                                    <button class=\"btn btn-sm btn-primary\" \n");
      out.write("                                                            onclick=\"updateOrderStatus('");
      out.print( order.get("table_name") );
      out.write("', '");
      out.print( order.get("id") );
      out.write("', 'shipped')\">\n");
      out.write("                                                        <i class=\"fas fa-truck\"></i>\n");
      out.write("                                                    </button>\n");
      out.write("                                                    <button class=\"btn btn-sm btn-success\" \n");
      out.write("                                                            onclick=\"updateOrderStatus('");
      out.print( order.get("table_name") );
      out.write("', '");
      out.print( order.get("id") );
      out.write("', 'delivered')\">\n");
      out.write("                                                        <i class=\"fas fa-check\"></i>\n");
      out.write("                                                    </button>\n");
      out.write("                                                </div>\n");
      out.write("                                            </td>\n");
      out.write("                                        </tr>\n");
      out.write("                                    ");
 } 
      out.write("\n");
      out.write("                                ");
 } 
      out.write("\n");
      out.write("                            </tbody>\n");
      out.write("                        </table>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("            ");
 } else if ("users".equals(currentView)) { 
      out.write("\n");
      out.write("                <!-- Users View -->\n");
      out.write("                <div class=\"page-header\">\n");
      out.write("                    <h1 class=\"page-title\">User Management</h1>\n");
      out.write("                    <p class=\"page-subtitle\">Manage registered users and their order history</p>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div class=\"content-section\">\n");
      out.write("                    <h2 class=\"section-title\">\n");
      out.write("                        <i class=\"fas fa-users\"></i>\n");
      out.write("                        Registered Users\n");
      out.write("                    </h2>\n");
      out.write("                    <div style=\"overflow-x: auto;\">\n");
      out.write("                        <table class=\"admin-table\">\n");
      out.write("                            <thead>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>User</th>\n");
      out.write("                                    <th>Email</th>\n");
      out.write("                                    <th>Orders</th>\n");
      out.write("                                    <th>Total Spent</th>\n");
      out.write("                                    <th>Last Order</th>\n");
      out.write("                                    <th>Status</th>\n");
      out.write("                                </tr>\n");
      out.write("                            </thead>\n");
      out.write("                            <tbody>\n");
      out.write("                                ");

                                    PreparedStatement userStmt = conn.prepareStatement("SELECT * FROM register ORDER BY created_at DESC");
                                    ResultSet users = userStmt.executeQuery();
                                    boolean hasUsers = false;
                                    while (users.next()) {
                                        hasUsers = true;
                                        String userName = users.getString("name");
                                        
                                        // Find user's order data
                                        Map<String, Object> userOrderData = null;
                                        for (Map<String, Object> userTable : userTables) {
                                            if (userName.equals(((String)userTable.get("username")).replace("_", " "))) {
                                                userOrderData = userTable;
                                                break;
                                            }
                                        }
                                
      out.write("\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td>\n");
      out.write("                                            <div style=\"display: flex; align-items: center;\">\n");
      out.write("                                                <div class=\"user-avatar\">\n");
      out.write("                                                    ");
      out.print( userName.substring(0, 1).toUpperCase() );
      out.write("\n");
      out.write("                                                </div>\n");
      out.write("                                                ");
      out.print( userName );
      out.write("\n");
      out.write("                                            </div>\n");
      out.write("                                        </td>\n");
      out.write("                                        <td>");
      out.print( users.getString("email") != null ? users.getString("email") : "N/A" );
      out.write("</td>\n");
      out.write("                                        <td>");
      out.print( userOrderData != null ? userOrderData.get("order_count") : 0 );
      out.write("</td>\n");
      out.write("                                        <td>₹");
      out.print( userOrderData != null ? String.format("%.2f", (Double)userOrderData.get("total_spent")) : "0.00" );
      out.write("</td>\n");
      out.write("                                        <td>\n");
      out.write("                                            ");
 if (userOrderData != null && userOrderData.get("last_order") != null) { 
      out.write("\n");
      out.write("                                                ");
      out.print( new java.text.SimpleDateFormat("MMM dd, yyyy").format((java.util.Date)userOrderData.get("last_order")) );
      out.write("\n");
      out.write("                                            ");
 } else { 
      out.write("\n");
      out.write("                                                No orders\n");
      out.write("                                            ");
 } 
      out.write("\n");
      out.write("                                        </td>\n");
      out.write("                                        <td>\n");
      out.write("                                            <span class=\"status-badge status-delivered\">\n");
      out.write("                                                <i class=\"fas fa-check-circle\"></i>\n");
      out.write("                                                Active\n");
      out.write("                                            </span>\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                ");

                                    }
                                    if (!hasUsers) {
                                
      out.write("\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td colspan=\"6\" style=\"text-align: center; color: #718096; padding: 40px;\">\n");
      out.write("                                            <i class=\"fas fa-users\" style=\"font-size: 24px; margin-bottom: 8px; display: block;\"></i>\n");
      out.write("                                            No users found\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                ");

                                    }
                                    users.close();
                                    userStmt.close();
                                
      out.write("\n");
      out.write("                            </tbody>\n");
      out.write("                        </table>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("                <!-- Default/Other Views -->\n");
      out.write("                <div class=\"page-header\">\n");
      out.write("                    <h1 class=\"page-title\">Coming Soon</h1>\n");
      out.write("                    <p class=\"page-subtitle\">This section is under development</p>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div class=\"content-section\">\n");
      out.write("                    <div style=\"text-align: center; padding: 60px 20px;\">\n");
      out.write("                        <i class=\"fas fa-tools\" style=\"font-size: 48px; color: #cbd5e0; margin-bottom: 16px;\"></i>\n");
      out.write("                        <h4>Feature Under Development</h4>\n");
      out.write("                        <p>This section will be available soon with more administrative features.</p>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("        </div>\n");
      out.write("    </main>\n");
      out.write("\n");
      out.write("    <!-- Add Product Modal (Simplified without file upload) -->\n");
      out.write("    <div class=\"modal fade\" id=\"addProductModal\" tabindex=\"-1\">\n");
      out.write("        <div class=\"modal-dialog modal-lg\">\n");
      out.write("            <div class=\"modal-content\">\n");
      out.write("                <div class=\"modal-header\">\n");
      out.write("                    <h5 class=\"modal-title\">Add New Product</h5>\n");
      out.write("                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n");
      out.write("                </div>\n");
      out.write("                <form method=\"post\">\n");
      out.write("                    <input type=\"hidden\" name=\"action\" value=\"add_product\">\n");
      out.write("                    <div class=\"modal-body\">\n");
      out.write("                        <div class=\"row\">\n");
      out.write("                            <div class=\"col-md-6\">\n");
      out.write("                                <div class=\"mb-3\">\n");
      out.write("                                    <label class=\"form-label\">Product Name *</label>\n");
      out.write("                                    <input type=\"text\" name=\"product_name\" class=\"form-control\" required>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-md-6\">\n");
      out.write("                                <div class=\"mb-3\">\n");
      out.write("                                    <label class=\"form-label\">SKU *</label>\n");
      out.write("                                    <input type=\"text\" name=\"product_sku\" class=\"form-control\" required>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"row\">\n");
      out.write("                            <div class=\"col-md-6\">\n");
      out.write("                                <div class=\"mb-3\">\n");
      out.write("                                    <label class=\"form-label\">Price *</label>\n");
      out.write("                                    <input type=\"number\" name=\"product_price\" class=\"form-control\" step=\"0.01\" required>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-md-6\">\n");
      out.write("                                <div class=\"mb-3\">\n");
      out.write("                                    <label class=\"form-label\">Stock *</label>\n");
      out.write("                                    <input type=\"number\" name=\"product_stock\" class=\"form-control\" required>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Category *</label>\n");
      out.write("                            <select name=\"product_category\" class=\"form-control\" required>\n");
      out.write("                                ");

                                    PreparedStatement catStmt = conn.prepareStatement("SELECT * FROM category ORDER BY name");
                                    ResultSet categories = catStmt.executeQuery();
                                    while (categories.next()) {
                                
      out.write("\n");
      out.write("                                    <option value=\"");
      out.print( categories.getInt("id") );
      out.write('"');
      out.write('>');
      out.print( categories.getString("name") );
      out.write("</option>\n");
      out.write("                                ");

                                    }
                                    categories.close();
                                    catStmt.close();
                                
      out.write("\n");
      out.write("                            </select>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Product Image URL</label>\n");
      out.write("                            <input type=\"url\" name=\"product_image\" class=\"form-control\" placeholder=\"https://example.com/image.jpg\">\n");
      out.write("                            <small class=\"text-muted\">Enter a valid image URL or leave blank for placeholder</small>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Description</label>\n");
      out.write("                            <textarea name=\"product_description\" class=\"form-control\" rows=\"3\"></textarea>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <!-- Product Variants Section -->\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Product Variants (Optional)</label>\n");
      out.write("                            <div id=\"variantsContainer\">\n");
      out.write("                                <div class=\"variant-row\">\n");
      out.write("                                    <div class=\"row\">\n");
      out.write("                                        <div class=\"col-md-3\">\n");
      out.write("                                            <input type=\"text\" name=\"variant_type\" class=\"form-control\" placeholder=\"Type (e.g., Size)\">\n");
      out.write("                                        </div>\n");
      out.write("                                        <div class=\"col-md-3\">\n");
      out.write("                                            <input type=\"text\" name=\"variant_value\" class=\"form-control\" placeholder=\"Value (e.g., Large)\">\n");
      out.write("                                        </div>\n");
      out.write("                                        <div class=\"col-md-3\">\n");
      out.write("                                            <input type=\"number\" name=\"variant_price\" class=\"form-control\" step=\"0.01\" placeholder=\"Price modifier\">\n");
      out.write("                                        </div>\n");
      out.write("                                        <div class=\"col-md-3\">\n");
      out.write("                                            <input type=\"number\" name=\"variant_stock\" class=\"form-control\" placeholder=\"Stock\">\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <button type=\"button\" class=\"btn btn-sm btn-secondary mt-2\" onclick=\"addVariantRow()\">\n");
      out.write("                                <i class=\"fas fa-plus me-1\"></i>Add Variant\n");
      out.write("                            </button>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"modal-footer\">\n");
      out.write("                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-primary\">Add Product</button>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Edit Product Modal -->\n");
      out.write("    <div class=\"modal fade\" id=\"editProductModal\" tabindex=\"-1\">\n");
      out.write("        <div class=\"modal-dialog\">\n");
      out.write("            <div class=\"modal-content\">\n");
      out.write("                <div class=\"modal-header\">\n");
      out.write("                    <h5 class=\"modal-title\">Edit Product</h5>\n");
      out.write("                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n");
      out.write("                </div>\n");
      out.write("                <form method=\"post\">\n");
      out.write("                    <input type=\"hidden\" name=\"action\" value=\"edit_product\">\n");
      out.write("                    <input type=\"hidden\" name=\"product_id\" id=\"edit_product_id\">\n");
      out.write("                    <div class=\"modal-body\">\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Product Name</label>\n");
      out.write("                            <input type=\"text\" name=\"product_name\" id=\"edit_product_name\" class=\"form-control\" required>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">SKU</label>\n");
      out.write("                            <input type=\"text\" name=\"product_sku\" id=\"edit_product_sku\" class=\"form-control\" required>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Price</label>\n");
      out.write("                            <input type=\"number\" name=\"product_price\" id=\"edit_product_price\" class=\"form-control\" step=\"0.01\" required>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Image URL</label>\n");
      out.write("                            <input type=\"url\" name=\"product_image\" id=\"edit_product_image\" class=\"form-control\" required>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Category</label>\n");
      out.write("                            <select name=\"product_category\" id=\"edit_product_category\" class=\"form-control\" required>\n");
      out.write("                                ");

                                    PreparedStatement catStmt2 = conn.prepareStatement("SELECT * FROM category ORDER BY name");
                                    ResultSet categories2 = catStmt2.executeQuery();
                                    while (categories2.next()) {
                                
      out.write("\n");
      out.write("                                    <option value=\"");
      out.print( categories2.getInt("id") );
      out.write('"');
      out.write('>');
      out.print( categories2.getString("name") );
      out.write("</option>\n");
      out.write("                                ");

                                    }
                                    categories2.close();
                                    catStmt2.close();
                                
      out.write("\n");
      out.write("                            </select>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Stock</label>\n");
      out.write("                            <input type=\"number\" name=\"product_stock\" id=\"edit_product_stock\" class=\"form-control\" required>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Description</label>\n");
      out.write("                            <textarea name=\"product_description\" id=\"edit_product_description\" class=\"form-control\" rows=\"3\"></textarea>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"modal-footer\">\n");
      out.write("                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-primary\">Update Product</button>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Add Category Modal -->\n");
      out.write("    <div class=\"modal fade\" id=\"addCategoryModal\" tabindex=\"-1\">\n");
      out.write("        <div class=\"modal-dialog\">\n");
      out.write("            <div class=\"modal-content\">\n");
      out.write("                <div class=\"modal-header\">\n");
      out.write("                    <h5 class=\"modal-title\">Add New Category</h5>\n");
      out.write("                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n");
      out.write("                </div>\n");
      out.write("                <form method=\"post\">\n");
      out.write("                    <input type=\"hidden\" name=\"action\" value=\"add_category\">\n");
      out.write("                    <div class=\"modal-body\">\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Category Name *</label>\n");
      out.write("                            <input type=\"text\" name=\"category_name\" class=\"form-control\" required>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Description</label>\n");
      out.write("                            <textarea name=\"category_description\" class=\"form-control\" rows=\"3\"></textarea>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"modal-footer\">\n");
      out.write("                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-primary\">Add Category</button>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Edit Category Modal -->\n");
      out.write("    <div class=\"modal fade\" id=\"editCategoryModal\" tabindex=\"-1\">\n");
      out.write("        <div class=\"modal-dialog\">\n");
      out.write("            <div class=\"modal-content\">\n");
      out.write("                <div class=\"modal-header\">\n");
      out.write("                    <h5 class=\"modal-title\">Edit Category</h5>\n");
      out.write("                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n");
      out.write("                </div>\n");
      out.write("                <form method=\"post\">\n");
      out.write("                    <input type=\"hidden\" name=\"action\" value=\"edit_category\">\n");
      out.write("                    <input type=\"hidden\" name=\"category_id\" id=\"edit_category_id\">\n");
      out.write("                    <div class=\"modal-body\">\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Category Name</label>\n");
      out.write("                            <input type=\"text\" name=\"category_name\" id=\"edit_category_name\" class=\"form-control\" required>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"mb-3\">\n");
      out.write("                            <label class=\"form-label\">Description</label>\n");
      out.write("                            <textarea name=\"category_description\" id=\"edit_category_description\" class=\"form-control\" rows=\"3\"></textarea>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"modal-footer\">\n");
      out.write("                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-primary\">Update Category</button>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Manage Variants Modal -->\n");
      out.write("    <div class=\"modal fade\" id=\"manageVariantsModal\" tabindex=\"-1\">\n");
      out.write("        <div class=\"modal-dialog modal-lg\">\n");
      out.write("            <div class=\"modal-content\">\n");
      out.write("                <div class=\"modal-header\">\n");
      out.write("                    <h5 class=\"modal-title\">Manage Product Variants</h5>\n");
      out.write("                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"modal-body\">\n");
      out.write("                    <div id=\"variantsContent\">\n");
      out.write("                        <p>Variant management functionality will be available when you add variants to products.</p>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"modal-footer\">\n");
      out.write("                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    ");

        conn.close();
    
      out.write("\n");
      out.write("\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("    <script>\n");
      out.write("        // Enhanced JavaScript Functions\n");
      out.write("        \n");
      out.write("        // Edit Product Function\n");
      out.write("        function editProduct(id, name, price, image, categoryId, stock, description, sku) {\n");
      out.write("            document.getElementById('edit_product_id').value = id;\n");
      out.write("            document.getElementById('edit_product_name').value = name;\n");
      out.write("            document.getElementById('edit_product_price').value = price;\n");
      out.write("            document.getElementById('edit_product_image').value = image;\n");
      out.write("            document.getElementById('edit_product_category').value = categoryId;\n");
      out.write("            document.getElementById('edit_product_stock').value = stock;\n");
      out.write("            document.getElementById('edit_product_description').value = description;\n");
      out.write("            document.getElementById('edit_product_sku').value = sku;\n");
      out.write("            \n");
      out.write("            new bootstrap.Modal(document.getElementById('editProductModal')).show();\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Delete Product Function\n");
      out.write("        function deleteProduct(id, name) {\n");
      out.write("            if (confirm('Are you sure you want to delete \"' + name + '\"?')) {\n");
      out.write("                window.location.href = '?action=delete_product&product_id=' + id;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Edit Category Function\n");
      out.write("        function editCategory(id, name, description) {\n");
      out.write("            document.getElementById('edit_category_id').value = id;\n");
      out.write("            document.getElementById('edit_category_name').value = name;\n");
      out.write("            document.getElementById('edit_category_description').value = description;\n");
      out.write("            \n");
      out.write("            new bootstrap.Modal(document.getElementById('editCategoryModal')).show();\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Delete Category Function\n");
      out.write("        function deleteCategory(id, name) {\n");
      out.write("            if (confirm('Are you sure you want to delete category \"' + name + '\"?')) {\n");
      out.write("                window.location.href = '?action=delete_category&category_id=' + id;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Manage Variants Function\n");
      out.write("        function manageVariants(productId, productName) {\n");
      out.write("            document.querySelector('#manageVariantsModal .modal-title').textContent = 'Manage Variants for ' + productName;\n");
      out.write("            document.getElementById('variantsContent').innerHTML = '<p>Variant management for product ID: ' + productId + '</p><p>This feature allows you to manage product variations like size, color, material, etc.</p>';\n");
      out.write("            new bootstrap.Modal(document.getElementById('manageVariantsModal')).show();\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Update Order Status Function\n");
      out.write("        function updateOrderStatus(tableName, orderId, status) {\n");
      out.write("            if (confirm('Update order status to \"' + status + '\"?')) {\n");
      out.write("                window.location.href = '?view=orders&action=update_order_status&table_name=' + tableName + '&order_id=' + orderId + '&new_status=' + status;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Bulk Operations Functions\n");
      out.write("        function toggleSelectAll() {\n");
      out.write("            const selectAll = document.getElementById('selectAll');\n");
      out.write("            const checkboxes = document.querySelectorAll('input[name=\"selected_products\"]');\n");
      out.write("            \n");
      out.write("            checkboxes.forEach(checkbox => {\n");
      out.write("                checkbox.checked = selectAll.checked;\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            updateBulkActions();\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function updateBulkActions() {\n");
      out.write("            const checkboxes = document.querySelectorAll('input[name=\"selected_products\"]:checked');\n");
      out.write("            const bulkActions = document.getElementById('bulkActions');\n");
      out.write("            const selectedCount = document.getElementById('selectedCount');\n");
      out.write("            \n");
      out.write("            if (checkboxes.length > 0) {\n");
      out.write("                bulkActions.classList.add('show');\n");
      out.write("                selectedCount.textContent = checkboxes.length;\n");
      out.write("            } else {\n");
      out.write("                bulkActions.classList.remove('show');\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function bulkDelete() {\n");
      out.write("            const checkboxes = document.querySelectorAll('input[name=\"selected_products\"]:checked');\n");
      out.write("            if (checkboxes.length === 0) {\n");
      out.write("                alert('Please select products to delete');\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            if (confirm('Are you sure you want to delete ' + checkboxes.length + ' selected products?')) {\n");
      out.write("                const form = document.getElementById('bulkForm');\n");
      out.write("                const actionInput = document.createElement('input');\n");
      out.write("                actionInput.type = 'hidden';\n");
      out.write("                actionInput.name = 'action';\n");
      out.write("                actionInput.value = 'bulk_delete';\n");
      out.write("                form.appendChild(actionInput);\n");
      out.write("                form.submit();\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function bulkUpdateStatus(status) {\n");
      out.write("            const checkboxes = document.querySelectorAll('input[name=\"selected_products\"]:checked');\n");
      out.write("            if (checkboxes.length === 0) {\n");
      out.write("                alert('Please select products to update');\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            if (confirm('Are you sure you want to ' + status + ' ' + checkboxes.length + ' selected products?')) {\n");
      out.write("                const form = document.getElementById('bulkForm');\n");
      out.write("                const actionInput = document.createElement('input');\n");
      out.write("                actionInput.type = 'hidden';\n");
      out.write("                actionInput.name = 'action';\n");
      out.write("                actionInput.value = 'bulk_update_status';\n");
      out.write("                form.appendChild(actionInput);\n");
      out.write("                \n");
      out.write("                const statusInput = document.createElement('input');\n");
      out.write("                statusInput.type = 'hidden';\n");
      out.write("                statusInput.name = 'bulk_status';\n");
      out.write("                statusInput.value = status;\n");
      out.write("                form.appendChild(statusInput);\n");
      out.write("                \n");
      out.write("                form.submit();\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Add Variant Row Function\n");
      out.write("        function addVariantRow() {\n");
      out.write("            const container = document.getElementById('variantsContainer');\n");
      out.write("            const newRow = document.createElement('div');\n");
      out.write("            newRow.className = 'variant-row';\n");
      out.write("            newRow.innerHTML = `\n");
      out.write("                <div class=\"row\">\n");
      out.write("                    <div class=\"col-md-3\">\n");
      out.write("                        <input type=\"text\" name=\"variant_type\" class=\"form-control\" placeholder=\"Type (e.g., Size)\">\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"col-md-3\">\n");
      out.write("                        <input type=\"text\" name=\"variant_value\" class=\"form-control\" placeholder=\"Value (e.g., Large)\">\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"col-md-3\">\n");
      out.write("                        <input type=\"number\" name=\"variant_price\" class=\"form-control\" step=\"0.01\" placeholder=\"Price modifier\">\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"col-md-2\">\n");
      out.write("                        <input type=\"number\" name=\"variant_stock\" class=\"form-control\" placeholder=\"Stock\">\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"col-md-1\">\n");
      out.write("                        <button type=\"button\" class=\"btn btn-sm btn-danger\" onclick=\"removeVariantRow(this)\">\n");
      out.write("                            <i class=\"fas fa-trash\"></i>\n");
      out.write("                        </button>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            `;\n");
      out.write("            container.appendChild(newRow);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function removeVariantRow(button) {\n");
      out.write("            button.closest('.variant-row').remove();\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Initialize page functionality\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("            // Add smooth animations\n");
      out.write("            const elements = document.querySelectorAll('.fade-in');\n");
      out.write("            elements.forEach((el, index) => {\n");
      out.write("                el.style.animationDelay = `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index * 0.1}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("s`;\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            // Add hover effects to stat cards\n");
      out.write("            document.querySelectorAll('.stat-card').forEach(card => {\n");
      out.write("                card.addEventListener('mouseenter', function() {\n");
      out.write("                    this.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.1)';\n");
      out.write("                });\n");
      out.write("                \n");
      out.write("                card.addEventListener('mouseleave', function() {\n");
      out.write("                    this.style.boxShadow = '0 2px 8px rgba(0, 0, 0, 0.05)';\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            // Mobile sidebar toggle\n");
      out.write("            const sidebarToggle = document.createElement('button');\n");
      out.write("            sidebarToggle.innerHTML = '<i class=\"fas fa-bars\"></i>';\n");
      out.write("            sidebarToggle.className = 'btn btn-outline-light d-md-none';\n");
      out.write("            sidebarToggle.style.position = 'fixed';\n");
      out.write("            sidebarToggle.style.top = '15px';\n");
      out.write("            sidebarToggle.style.left = '15px';\n");
      out.write("            sidebarToggle.style.zIndex = '1001';\n");
      out.write("            \n");
      out.write("            sidebarToggle.addEventListener('click', function() {\n");
      out.write("                document.querySelector('.admin-sidebar').classList.toggle('show');\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            document.body.appendChild(sidebarToggle);\n");
      out.write("\n");
      out.write("            // Auto-hide alerts after 5 seconds\n");
      out.write("            setTimeout(function() {\n");
      out.write("                const alerts = document.querySelectorAll('.alert');\n");
      out.write("                alerts.forEach(alert => {\n");
      out.write("                    alert.style.opacity = '0';\n");
      out.write("                    setTimeout(() => alert.remove(), 300);\n");
      out.write("                });\n");
      out.write("            }, 5000);\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
